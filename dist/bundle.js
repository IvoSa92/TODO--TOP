/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/DOM.js":
/*!********************!*\
  !*** ./src/DOM.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst DomElements = {\n  //container:\n  currentContent: document.querySelector(\".currentContent\"),\n  container: document.querySelector(\".container\"),\n  allViewPage: document.querySelector(\".all-view\"),\n  tomorrowViewPage: document.querySelector(\".tomorrow-view\"),\n  todayViewPage: document.querySelector(\".today-view\"),\n  upcomingViewPage: document.querySelector(\".upcoming-view\"),\n  projects: document.querySelector(\".projects\"),\n  //Buttons:\n  addTaskButton: document.querySelector(\".add-task\"),\n  allTasksButton: document.querySelector(\".all-tasks\"),\n  todayTasksButton: document.querySelector(\".today-tasks\"),\n  tomorrowTasksButton: document.querySelector(\".tomorrow-tasks\"),\n  upcomingTasksButton: document.querySelector(\".upcoming-tasks\"),\n  newProjectButton: document.querySelector(\".new-project-button\"),\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DomElements);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRE9NLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlFQUFlLFdBQVcsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8tLXRvcC8uL3NyYy9ET00uanM/ZmViMSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBEb21FbGVtZW50cyA9IHtcbiAgLy9jb250YWluZXI6XG4gIGN1cnJlbnRDb250ZW50OiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmN1cnJlbnRDb250ZW50XCIpLFxuICBjb250YWluZXI6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY29udGFpbmVyXCIpLFxuICBhbGxWaWV3UGFnZTogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hbGwtdmlld1wiKSxcbiAgdG9tb3Jyb3dWaWV3UGFnZTogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50b21vcnJvdy12aWV3XCIpLFxuICB0b2RheVZpZXdQYWdlOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnRvZGF5LXZpZXdcIiksXG4gIHVwY29taW5nVmlld1BhZ2U6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudXBjb21pbmctdmlld1wiKSxcbiAgcHJvamVjdHM6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvamVjdHNcIiksXG4gIC8vQnV0dG9uczpcbiAgYWRkVGFza0J1dHRvbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hZGQtdGFza1wiKSxcbiAgYWxsVGFza3NCdXR0b246IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWxsLXRhc2tzXCIpLFxuICB0b2RheVRhc2tzQnV0dG9uOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnRvZGF5LXRhc2tzXCIpLFxuICB0b21vcnJvd1Rhc2tzQnV0dG9uOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnRvbW9ycm93LXRhc2tzXCIpLFxuICB1cGNvbWluZ1Rhc2tzQnV0dG9uOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnVwY29taW5nLXRhc2tzXCIpLFxuICBuZXdQcm9qZWN0QnV0dG9uOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm5ldy1wcm9qZWN0LWJ1dHRvblwiKSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IERvbUVsZW1lbnRzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/DOM.js\n");

/***/ }),

/***/ "./src/handleViewOptions.js":
/*!**********************************!*\
  !*** ./src/handleViewOptions.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _DOM__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DOM */ \"./src/DOM.js\");\n/* harmony import */ var _newTaskManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./newTaskManager */ \"./src/newTaskManager.js\");\n\n\n\nclass HandleNavButtons {\n  static currentPage = \"allTasks\";\n  constructor(taskManager) {\n    this.taskManager = taskManager;\n    //link buttons\n    this.allTasksButton = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].allTasksButton;\n    this.tomorrowTasksButton = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tomorrowTasksButton;\n    this.todayTasksButton = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].todayTasksButton;\n    this.upcomingTasksButton = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].upcomingTasksButton;\n    //link containers\n    this.currentContent = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentContent;\n    this.viewAllTasks = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].allViewPage;\n    this.viewTodayTasks = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].todayViewPage;\n    this.viewTomorrowTasks = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tomorrowViewPage;\n    this.viewUpcomingTasks = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].upcomingViewPage;\n    //function to add the event listeners\n    this.initializeEventListeners();\n  }\n  //setting event listeners up\n  initializeEventListeners() {\n    this.allTasksButton.addEventListener(\"click\", () => this.displayAllTasks());\n    this.todayTasksButton.addEventListener(\"click\", () =>\n      this.displayTodayTasks()\n    );\n    this.tomorrowTasksButton.addEventListener(\"click\", () =>\n      this.displayTomorrowTasks()\n    );\n    this.upcomingTasksButton.addEventListener(\"click\", () =>\n      this.displayUpcomingTasks()\n    );\n  }\n  // function for the page with all tasks sortet by priority\n  displayAllTasks() {\n    this.currentContent.innerHTML = \"\";\n    this.viewAllTasks.style.display = \"flex\";\n    this.currentContent.appendChild(this.viewAllTasks);\n    HandleNavButtons.currentPage = \"allTasks\";\n    this.taskManager.updateScreen();\n  }\n  // function to display the page with all tasks with the date of today\n  displayTodayTasks() {\n    this.currentContent.innerHTML = \"\";\n    this.viewTodayTasks.style.display = \"flex\";\n    this.currentContent.appendChild(this.viewTodayTasks);\n    HandleNavButtons.currentPage = \"todayTasks\";\n    this.taskManager.updateScreen();\n  }\n  // function to display the page with all tasks with the date of tomorrow\n  displayTomorrowTasks() {\n    this.currentContent.innerHTML = \"\";\n    this.viewTomorrowTasks.style.display = \"flex\";\n    this.currentContent.appendChild(this.viewTomorrowTasks);\n    HandleNavButtons.currentPage = \"tomorrowTasks\";\n    this.taskManager.updateScreen();\n  }\n  // function to display the page with alls tasks with the date of tomorrow - future\n  displayUpcomingTasks() {\n    this.currentContent.innerHTML = \"\";\n    this.viewUpcomingTasks.style.display = \"flex\";\n    this.currentContent.appendChild(this.viewUpcomingTasks);\n    HandleNavButtons.currentPage = \"upcomingTasks\";\n    this.taskManager.updateScreen();\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HandleNavButtons);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaGFuZGxlVmlld09wdGlvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdDO0FBQ2M7O0FBRTlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsNENBQVc7QUFDckMsK0JBQStCLDRDQUFXO0FBQzFDLDRCQUE0Qiw0Q0FBVztBQUN2QywrQkFBK0IsNENBQVc7QUFDMUM7QUFDQSwwQkFBMEIsNENBQVc7QUFDckMsd0JBQXdCLDRDQUFXO0FBQ25DLDBCQUEwQiw0Q0FBVztBQUNyQyw2QkFBNkIsNENBQVc7QUFDeEMsNkJBQTZCLDRDQUFXO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlFQUFlLGdCQUFnQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kby0tdG9wLy4vc3JjL2hhbmRsZVZpZXdPcHRpb25zLmpzPzY4ZDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERvbUVsZW1lbnRzIGZyb20gXCIuL0RPTVwiO1xuaW1wb3J0IE5ld1Rhc2tNYW5hZ2VyIGZyb20gXCIuL25ld1Rhc2tNYW5hZ2VyXCI7XG5cbmNsYXNzIEhhbmRsZU5hdkJ1dHRvbnMge1xuICBzdGF0aWMgY3VycmVudFBhZ2UgPSBcImFsbFRhc2tzXCI7XG4gIGNvbnN0cnVjdG9yKHRhc2tNYW5hZ2VyKSB7XG4gICAgdGhpcy50YXNrTWFuYWdlciA9IHRhc2tNYW5hZ2VyO1xuICAgIC8vbGluayBidXR0b25zXG4gICAgdGhpcy5hbGxUYXNrc0J1dHRvbiA9IERvbUVsZW1lbnRzLmFsbFRhc2tzQnV0dG9uO1xuICAgIHRoaXMudG9tb3Jyb3dUYXNrc0J1dHRvbiA9IERvbUVsZW1lbnRzLnRvbW9ycm93VGFza3NCdXR0b247XG4gICAgdGhpcy50b2RheVRhc2tzQnV0dG9uID0gRG9tRWxlbWVudHMudG9kYXlUYXNrc0J1dHRvbjtcbiAgICB0aGlzLnVwY29taW5nVGFza3NCdXR0b24gPSBEb21FbGVtZW50cy51cGNvbWluZ1Rhc2tzQnV0dG9uO1xuICAgIC8vbGluayBjb250YWluZXJzXG4gICAgdGhpcy5jdXJyZW50Q29udGVudCA9IERvbUVsZW1lbnRzLmN1cnJlbnRDb250ZW50O1xuICAgIHRoaXMudmlld0FsbFRhc2tzID0gRG9tRWxlbWVudHMuYWxsVmlld1BhZ2U7XG4gICAgdGhpcy52aWV3VG9kYXlUYXNrcyA9IERvbUVsZW1lbnRzLnRvZGF5Vmlld1BhZ2U7XG4gICAgdGhpcy52aWV3VG9tb3Jyb3dUYXNrcyA9IERvbUVsZW1lbnRzLnRvbW9ycm93Vmlld1BhZ2U7XG4gICAgdGhpcy52aWV3VXBjb21pbmdUYXNrcyA9IERvbUVsZW1lbnRzLnVwY29taW5nVmlld1BhZ2U7XG4gICAgLy9mdW5jdGlvbiB0byBhZGQgdGhlIGV2ZW50IGxpc3RlbmVyc1xuICAgIHRoaXMuaW5pdGlhbGl6ZUV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cbiAgLy9zZXR0aW5nIGV2ZW50IGxpc3RlbmVycyB1cFxuICBpbml0aWFsaXplRXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5hbGxUYXNrc0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gdGhpcy5kaXNwbGF5QWxsVGFza3MoKSk7XG4gICAgdGhpcy50b2RheVRhc2tzQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PlxuICAgICAgdGhpcy5kaXNwbGF5VG9kYXlUYXNrcygpXG4gICAgKTtcbiAgICB0aGlzLnRvbW9ycm93VGFza3NCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+XG4gICAgICB0aGlzLmRpc3BsYXlUb21vcnJvd1Rhc2tzKClcbiAgICApO1xuICAgIHRoaXMudXBjb21pbmdUYXNrc0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT5cbiAgICAgIHRoaXMuZGlzcGxheVVwY29taW5nVGFza3MoKVxuICAgICk7XG4gIH1cbiAgLy8gZnVuY3Rpb24gZm9yIHRoZSBwYWdlIHdpdGggYWxsIHRhc2tzIHNvcnRldCBieSBwcmlvcml0eVxuICBkaXNwbGF5QWxsVGFza3MoKSB7XG4gICAgdGhpcy5jdXJyZW50Q29udGVudC5pbm5lckhUTUwgPSBcIlwiO1xuICAgIHRoaXMudmlld0FsbFRhc2tzLnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcbiAgICB0aGlzLmN1cnJlbnRDb250ZW50LmFwcGVuZENoaWxkKHRoaXMudmlld0FsbFRhc2tzKTtcbiAgICBIYW5kbGVOYXZCdXR0b25zLmN1cnJlbnRQYWdlID0gXCJhbGxUYXNrc1wiO1xuICAgIHRoaXMudGFza01hbmFnZXIudXBkYXRlU2NyZWVuKCk7XG4gIH1cbiAgLy8gZnVuY3Rpb24gdG8gZGlzcGxheSB0aGUgcGFnZSB3aXRoIGFsbCB0YXNrcyB3aXRoIHRoZSBkYXRlIG9mIHRvZGF5XG4gIGRpc3BsYXlUb2RheVRhc2tzKCkge1xuICAgIHRoaXMuY3VycmVudENvbnRlbnQuaW5uZXJIVE1MID0gXCJcIjtcbiAgICB0aGlzLnZpZXdUb2RheVRhc2tzLnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcbiAgICB0aGlzLmN1cnJlbnRDb250ZW50LmFwcGVuZENoaWxkKHRoaXMudmlld1RvZGF5VGFza3MpO1xuICAgIEhhbmRsZU5hdkJ1dHRvbnMuY3VycmVudFBhZ2UgPSBcInRvZGF5VGFza3NcIjtcbiAgICB0aGlzLnRhc2tNYW5hZ2VyLnVwZGF0ZVNjcmVlbigpO1xuICB9XG4gIC8vIGZ1bmN0aW9uIHRvIGRpc3BsYXkgdGhlIHBhZ2Ugd2l0aCBhbGwgdGFza3Mgd2l0aCB0aGUgZGF0ZSBvZiB0b21vcnJvd1xuICBkaXNwbGF5VG9tb3Jyb3dUYXNrcygpIHtcbiAgICB0aGlzLmN1cnJlbnRDb250ZW50LmlubmVySFRNTCA9IFwiXCI7XG4gICAgdGhpcy52aWV3VG9tb3Jyb3dUYXNrcy5zdHlsZS5kaXNwbGF5ID0gXCJmbGV4XCI7XG4gICAgdGhpcy5jdXJyZW50Q29udGVudC5hcHBlbmRDaGlsZCh0aGlzLnZpZXdUb21vcnJvd1Rhc2tzKTtcbiAgICBIYW5kbGVOYXZCdXR0b25zLmN1cnJlbnRQYWdlID0gXCJ0b21vcnJvd1Rhc2tzXCI7XG4gICAgdGhpcy50YXNrTWFuYWdlci51cGRhdGVTY3JlZW4oKTtcbiAgfVxuICAvLyBmdW5jdGlvbiB0byBkaXNwbGF5IHRoZSBwYWdlIHdpdGggYWxscyB0YXNrcyB3aXRoIHRoZSBkYXRlIG9mIHRvbW9ycm93IC0gZnV0dXJlXG4gIGRpc3BsYXlVcGNvbWluZ1Rhc2tzKCkge1xuICAgIHRoaXMuY3VycmVudENvbnRlbnQuaW5uZXJIVE1MID0gXCJcIjtcbiAgICB0aGlzLnZpZXdVcGNvbWluZ1Rhc2tzLnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcbiAgICB0aGlzLmN1cnJlbnRDb250ZW50LmFwcGVuZENoaWxkKHRoaXMudmlld1VwY29taW5nVGFza3MpO1xuICAgIEhhbmRsZU5hdkJ1dHRvbnMuY3VycmVudFBhZ2UgPSBcInVwY29taW5nVGFza3NcIjtcbiAgICB0aGlzLnRhc2tNYW5hZ2VyLnVwZGF0ZVNjcmVlbigpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEhhbmRsZU5hdkJ1dHRvbnM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/handleViewOptions.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _DOM__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DOM */ \"./src/DOM.js\");\n/* harmony import */ var _newTaskManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./newTaskManager */ \"./src/newTaskManager.js\");\n/* harmony import */ var _handleViewOptions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./handleViewOptions */ \"./src/handleViewOptions.js\");\n/* harmony import */ var _projectManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./projectManager */ \"./src/projectManager.js\");\nconsole.log(\"hello\");\n\n\n\n\n\n\nconst newTaskManager = new _newTaskManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\nconst handleSideNavButtons = new _handleViewOptions__WEBPACK_IMPORTED_MODULE_2__[\"default\"](newTaskManager);\nconst projectManager = new _projectManager__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7QUFFZ0M7QUFDYztBQUNLO0FBQ0w7O0FBRTlDLDJCQUEyQix1REFBYztBQUN6QyxpQ0FBaUMsMERBQWdCO0FBQ2pELDJCQUEyQix1REFBYyIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8tLXRvcC8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnNvbGUubG9nKFwiaGVsbG9cIik7XG5cbmltcG9ydCBEb21FbGVtZW50cyBmcm9tIFwiLi9ET01cIjtcbmltcG9ydCBOZXdUYXNrTWFuYWdlciBmcm9tIFwiLi9uZXdUYXNrTWFuYWdlclwiO1xuaW1wb3J0IEhhbmRsZU5hdkJ1dHRvbnMgZnJvbSBcIi4vaGFuZGxlVmlld09wdGlvbnNcIjtcbmltcG9ydCBQcm9qZWN0TWFuYWdlciBmcm9tIFwiLi9wcm9qZWN0TWFuYWdlclwiO1xuXG5jb25zdCBuZXdUYXNrTWFuYWdlciA9IG5ldyBOZXdUYXNrTWFuYWdlcigpO1xuY29uc3QgaGFuZGxlU2lkZU5hdkJ1dHRvbnMgPSBuZXcgSGFuZGxlTmF2QnV0dG9ucyhuZXdUYXNrTWFuYWdlcik7XG5jb25zdCBwcm9qZWN0TWFuYWdlciA9IG5ldyBQcm9qZWN0TWFuYWdlcigpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/newTaskManager.js":
/*!*******************************!*\
  !*** ./src/newTaskManager.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _DOM__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DOM */ \"./src/DOM.js\");\n/* harmony import */ var _handleViewOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handleViewOptions */ \"./src/handleViewOptions.js\");\n\n\n\nclass NewTaskManager {\n  static taskList = [];\n  static getTaskList() {\n    return NewTaskManager.taskList;\n  }\n\n  constructor() {\n    this.formActive = false;\n    this.addTaskButton = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addTaskButton;\n    this.currentContent = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentContent;\n    this.allViewPage = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].allViewPage;\n    this.todaysTasksPage = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].todayViewPage;\n    this.tomorrowsTasksPage = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tomorrowViewPage;\n    this.upcomingTasksPage = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].upcomingViewPage;\n    this.initializeEventListeners();\n  }\n\n  initializeEventListeners() {\n    this.addTaskButton.addEventListener(\"click\", () => this.newTaskForm());\n  }\n\n  //creates a new task form pop up window when user clicks on the plus icon\n  newTaskForm() {\n    // checks if the form is already displayed\n    if (this.formActive === false) {\n      this.formActive = true;\n      //remove all containers for the form pop up\n      // this.currentContent.innerHTML = \"\";\n      //created the form to append\n      const newTaskForm = this.createFormElements();\n      //newTaskForm.classList.add(\"new-task\");\n      //creates the blurry background\n      const blurredScreen = document.createElement(\"div\");\n      blurredScreen.classList.add(\"blurred-screen\");\n\n      this.currentContent.append(newTaskForm, blurredScreen);\n    } else {\n      alert(\"Please fill out the displayed form\");\n    }\n  }\n\n  //creates the elements for the form\n  createFormElements() {\n    const newTaskForm = document.createElement(\"div\");\n    newTaskForm.classList.add(\"new-task\");\n\n    this.titleInput = this.createInputField(\"Title\", \"title\", \"text\");\n    this.dateInput = this.createInputField(\"Date\", \"date\", \"date\");\n    this.prioritySelect = this.createSelectField(\"priority-input\", [\n      \"High\",\n      \"Medium\",\n      \"Low\",\n    ]);\n    this.projectSelection = this.createProjectSelection();\n    this.descriptionInput = this.createDescriptionField(\"description\");\n\n    const buttonContainer = document.createElement(\"div\");\n    buttonContainer.classList.add(\"button-container\");\n\n    const submitButton = this.createButtons(\"Submit\", \"submit-button\");\n    submitButton.addEventListener(\"click\", () => {\n      this.handleSubmit();\n    });\n    const deleteButton = this.createButtons(\"Delete\", \"delete-button\");\n    deleteButton.addEventListener(\"click\", () => {\n      this.handleDelete();\n    });\n\n    buttonContainer.append(submitButton, deleteButton);\n\n    newTaskForm.append(\n      this.titleInput,\n      this.dateInput,\n      this.prioritySelect,\n      this.projectSelection,\n      this.descriptionInput,\n      buttonContainer\n    );\n\n    return newTaskForm;\n  }\n\n  //creates the input fields of the form\n  createInputField(headerText, inputClass, type) {\n    const inputContainer = document.createElement(\"div\");\n    inputContainer.classList.add(\"form-div\");\n\n    const inputHeader = document.createElement(\"label\");\n    inputHeader.textContent = headerText;\n    inputHeader.classList.add(`${inputClass}-caption`);\n\n    const input = document.createElement(\"input\");\n    input.type = type;\n    input.classList.add(`${inputClass}-input`, \"formInput\");\n\n    inputContainer.append(inputHeader, input);\n    return inputContainer;\n  }\n\n  //creates the select field of the form\n  createSelectField(selectClass, options) {\n    const inputContainer = document.createElement(\"div\");\n    inputContainer.classList.add(\"form-div\");\n\n    const label = document.createElement(\"label\");\n    label.textContent = \"Priority\";\n    label.classList.add(\"priority-caption\");\n\n    const select = document.createElement(\"select\");\n    select.classList.add(selectClass, \"formInput\");\n\n    options.forEach((optionText) => {\n      const option = document.createElement(\"option\");\n      option.value = optionText;\n      option.textContent = optionText;\n      select.appendChild(option);\n    });\n\n    inputContainer.append(label, select);\n    return inputContainer;\n  }\n\n  // creates the project selection field of the form\n  createProjectSelection() {\n    const projectContainer = document.createElement(\"div\");\n    projectContainer.classList.add(\"form-div\");\n\n    const label = document.createElement(\"label\");\n    label.classList.add(\"form-project-label\");\n    label.textContent = \"Project\";\n\n    const select = document.createElement(\"select\");\n    select.classList.add(\"form-project-select\");\n    select.classList.add(\"formInput\");\n\n    // search for all created projects in the DOM\n    const optionElements = Array.from(\n      document.querySelectorAll(\".new-project-nav-btn\")\n    );\n\n    //filter the elements for their innerHTML to add them to the selection\n    const innerHTMLArray = optionElements.map(function (element) {\n      return element.textContent;\n    });\n\n    innerHTMLArray.forEach((optionText) => {\n      const option = document.createElement(\"option\");\n      option.value = optionText;\n      option.textContent = optionText;\n      select.appendChild(option);\n    });\n\n    projectContainer.append(label, select);\n    return projectContainer;\n  }\n\n  //creates the description field of the form\n  createDescriptionField(descriptionClass) {\n    const descriptionContainer = document.createElement(\"div\");\n    descriptionContainer.classList.add(\"form-div\");\n\n    const label = document.createElement(\"label\");\n    label.classList.add(`${descriptionClass}-caption`);\n    label.textContent = \"Description\";\n\n    const textArea = document.createElement(\"textarea\");\n    textArea.classList.add(`${descriptionClass}-input`, \"formInput\");\n\n    descriptionContainer.append(label, textArea);\n    return descriptionContainer;\n  }\n\n  //creates the buttons of the form\n  createButtons(buttonText, buttonClass) {\n    const button = document.createElement(\"button\");\n    button.textContent = buttonText;\n    button.classList.add(buttonClass, \"form-button\");\n\n    return button;\n  }\n\n  // function for the delete button of the new task form\n  handleDelete() {\n    const allViewPage = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].allViewPage;\n    this.titleInput.value = \"\";\n    this.dateInput.value = \"\";\n    this.prioritySelect.value = \"\";\n    this.descriptionInput.value = \"\";\n    this.currentContent.innerHTML = \"\";\n    this.currentContent.appendChild(allViewPage);\n    this.formActive = false;\n  }\n\n  //submit handler\n  handleSubmit() {\n    const allViewPage = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].allViewPage;\n    const taskData = {\n      title: this.titleInput.querySelector(\".title-input\").value,\n      date: this.dateInput.querySelector(\".date-input\").value,\n      priority: this.prioritySelect.querySelector(\".priority-input\").value,\n      description:\n        this.descriptionInput.querySelector(\".description-input\").value,\n      id: `new-task-card-${NewTaskManager.taskList.length + 1}`,\n      project: this.projectSelection.querySelector(\".form-project-select\")\n        .value,\n      isChecked: false,\n    };\n\n    const newTaskCard = this.createTaskCard(taskData);\n    newTaskCard.style.height = \"5rem\";\n    NewTaskManager.taskList.push({ data: taskData, element: newTaskCard });\n    //allViewPage.innerHTML = \"\";\n\n    // updating the screen with the tasks in the array\n    this.updateScreen();\n\n    // remove task form and blurred screen after clicking on submit\n    const taskForm = document.querySelector(\".new-task\");\n    const blurredScreen = document.querySelector(\".blurred-screen\");\n    this.currentContent.removeChild(taskForm);\n    this.currentContent.removeChild(blurredScreen);\n    // appending the tasks to the current content screen\n    this.currentContent.appendChild(allViewPage);\n    allViewPage.style.display = \"flex\";\n    this.formActive = false;\n\n    console.log(NewTaskManager.taskList);\n  }\n\n  // function to detect todays date and format it like the date in the tasks\n  isToday() {\n    const today = new Date();\n    const day = String(today.getDate()).padStart(2, \"0\");\n    const month = String(today.getMonth() + 1).padStart(2, \"0\");\n    const year = today.getFullYear();\n    return `${year}-${month}-${day}`;\n  }\n  //function to detect todays date and add one day for tomorrow date\n  isTomorrow() {\n    const today = new Date();\n    const day = String(today.getDate()).padStart(2, \"0\");\n    const Tomorrow = parseFloat(day) + 1;\n    const month = String(today.getMonth() + 1).padStart(2, \"0\");\n    const year = today.getFullYear();\n\n    return `${year}-${month}-${Tomorrow}`;\n  }\n\n  updateScreen() {\n    // get todays date and the numbers for month and year\n    const today = this.isToday();\n    const tomorrow = this.isTomorrow();\n\n    //filter tasklist for all tasks\n    const allTasks = NewTaskManager.taskList;\n\n    // filter tasklist by the todays date\n    const todaysTasks = NewTaskManager.taskList.filter(\n      (task) => task.data.date === today\n    );\n\n    // filter tasklist by the date of tomorrow\n    const tomorrowTasks = NewTaskManager.taskList.filter(\n      (task) => task.data.date === tomorrow\n    );\n\n    //filter tasks by date bigger than today\n    const upcomingTasks = NewTaskManager.taskList.filter(\n      (task) => task.data.date > tomorrow\n    );\n\n    //sort tasks after priority\n    NewTaskManager.taskList.sort(\n      (a, b) =>\n        this.priorityToNumber(b.data.priority) -\n        this.priorityToNumber(a.data.priority)\n    );\n\n    if (_handleViewOptions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].currentPage === \"allTasks\") {\n      this.allViewPage.innerHTML = \"\";\n      // toggle task colorization by priority and append tasks to all tasks page\n      allTasks.forEach((taskObject) =>\n        this.appendTaskToPage(taskObject, this.allViewPage)\n      );\n    } else if (_handleViewOptions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].currentPage === \"todayTasks\") {\n      this.todaysTasksPage.innerHTML = \"\";\n      // toggle task colorization by priority and append tasks to today tasks page\n      todaysTasks.forEach((taskObject) =>\n        this.appendTaskToPage(taskObject, this.todaysTasksPage)\n      );\n    } else if (_handleViewOptions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].currentPage === \"tomorrowTasks\") {\n      this.tomorrowsTasksPage.innerHTML = \"\";\n      // toggle task colorization by priority and append tasks to tomorrow tasks page\n      tomorrowTasks.forEach((taskObject) =>\n        this.appendTaskToPage(taskObject, this.tomorrowsTasksPage)\n      );\n    } else if (_handleViewOptions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].currentPage === \"upcomingTasks\") {\n      this.upcomingTasksPage.innerHTML = \"\";\n      // toggle task colorization by priority and append tasks to tomorrow tasks page\n      upcomingTasks.forEach((taskObject) =>\n        this.appendTaskToPage(taskObject, this.upcomingTasksPage)\n      );\n    }\n  }\n\n  // function for appending the tasks\n  appendTaskToPage(taskObject, page) {\n    taskObject.element.className = \"task-card\";\n    if (taskObject.isChecked) {\n      //change title text decoration and color by checking checkbox\n      taskObject.element.classList.toggle(\"checked-checkbox-font\");\n      taskObject.element.classList.toggle(\"checked-checkbox-font\");\n      taskObject.element.classList.toggle(\"checked-checkbox-background\");\n    } else if (taskObject.isChecked === false) {\n      //change title text decoration and color by checking checkbox\n      taskObject.element.classList.toggle(\"checked-checkbox-font\");\n      taskObject.element.classList.toggle(\"checked-checkbox-font\");\n    }\n    switch (taskObject.data.priority) {\n      case \"High\":\n        taskObject.element.classList.add(\"priority-high\");\n        break;\n      case \"Medium\":\n        taskObject.element.classList.add(\"priority-medium\");\n        break;\n      case \"Low\":\n        taskObject.element.classList.add(\"priority-low\");\n        break;\n    }\n    page.appendChild(taskObject.element);\n  }\n\n  // function to set the priorities to number so the task list can be ordered by priority\n  priorityToNumber(priority) {\n    switch (priority) {\n      case \"High\":\n        return 3;\n\n      case \"Medium\":\n        return 2;\n\n      case \"Low\":\n        return 1;\n    }\n  }\n\n  // create task card\n  createTaskCard(taskData) {\n    const newTaskCard = document.createElement(\"div\");\n    newTaskCard.dataset.id = taskData.id;\n    // container for the not expanded part of the task\n    const visibleContent = document.createElement(\"div\");\n    visibleContent.classList.add(\"card-task-visible\");\n\n    //container for the hidden task part\n    const hiddenContent = document.createElement(\"div\");\n    hiddenContent.classList.add(\"card-task-hidden\");\n    hiddenContent.style.display = \"none\";\n\n    //create checkbox\n    const checkBox = document.createElement(\"input\");\n    checkBox.type = \"checkbox\";\n    checkBox.classList.add(\"card-task-checkbox\");\n\n    checkBox.addEventListener(\"click\", (event) => {\n      event.stopPropagation();\n\n      //find task which gets checked\n      let taskChecked = event.target.closest(\".task-card\");\n      let taskId = taskChecked.dataset.id;\n      // finding task with taskId\n      let index = NewTaskManager.taskList.findIndex(\n        (task) => task.data.id === taskId\n      );\n      NewTaskManager.taskList[index].isChecked = NewTaskManager.taskList[index]\n        .isChecked\n        ? false\n        : true;\n\n      //change title text decoration and color by checking checkbox\n      cardTaskTitle.classList.toggle(\"checked-checkbox-font\");\n      cardTaskPriority.classList.toggle(\"checked-checkbox-font\");\n      newTaskCard.classList.toggle(\"checked-checkbox-background\");\n\n      //remove buttons from checked task\n      cardTaskBtnContainer.classList.toggle(\"task-buttons-toggle\");\n    });\n\n    // create title field\n    const cardTaskTitle = document.createElement(\"label\");\n    cardTaskTitle.textContent = taskData.title;\n    cardTaskTitle.classList.add(\"card-task-title\");\n    //setting color for event listener function\n    cardTaskTitle.style.color = \"rgb(59, 59, 59)\";\n\n    // create project field\n    const cardTaskProject = document.createElement(\"label\");\n    cardTaskProject.textContent = `Project: ${taskData.project}`;\n    cardTaskProject.classList.add(\"card-task-project\");\n\n    // create date field\n    const cardTaskDate = document.createElement(\"div\");\n    cardTaskDate.textContent = `DueDate: ${taskData.date}`;\n    cardTaskDate.classList.add(\"card-task-date\");\n\n    // create selection field\n    const cardTaskPriority = document.createElement(\"div\");\n    cardTaskPriority.textContent = taskData.priority;\n    cardTaskPriority.classList.add(\"card-task-priority\");\n    cardTaskPriority.style.color = \"rgb(59, 59, 59)\";\n\n    // create description field\n    const cardTaskDescription = document.createElement(\"div\");\n    cardTaskDescription.textContent = taskData.description;\n    cardTaskDescription.classList.add(\"card-task-description\");\n\n    // create container for delete and change buttons\n    const cardTaskBtnContainer = document.createElement(\"div\");\n    cardTaskBtnContainer.classList.add(\"card-task-btn-container\");\n\n    //create delete button with the function the delete the task\n    const cardTaskDeleteBtn = document.createElement(\"button\");\n    cardTaskDeleteBtn.textContent = \"Delete\";\n    cardTaskDeleteBtn.classList.add(\"card-task-delete-btn\");\n    cardTaskDeleteBtn.addEventListener(\"click\", (event) => {\n      event.stopPropagation();\n      //get task by the class and set it as the id for finding it in the taskList array\n      let taskToDelete = event.target.closest(\".task-card\");\n      let taskId = taskToDelete.dataset.id;\n\n      // finding task with taskId\n      let index = NewTaskManager.taskList.findIndex(\n        (task) => task.data.id === taskId\n      );\n\n      //delete the task in the taskList\n      if (index !== -1) {\n        NewTaskManager.taskList.splice(index, 1);\n        this.updateScreen();\n      }\n    });\n\n    //create edit button with function to edit the task\n    const cardTaskEditBtn = document.createElement(\"button\");\n    cardTaskEditBtn.textContent = \"Edit\";\n    cardTaskEditBtn.classList.add(\"card-task-edit-btn\");\n    // function for editing the task\n    cardTaskEditBtn.addEventListener(\"click\", (event) => {\n      event.stopPropagation();\n      // get task object\n      let taskCard = event.target.closest(\".task-card\");\n      let taskId = taskCard.dataset.id;\n      this.editTaskForm(taskId);\n    });\n\n    //add event listener with function to expand a task card\n    newTaskCard.addEventListener(\"click\", function () {\n      hiddenContent.style.display =\n        hiddenContent.style.display === \"none\" ? \"flex\" : \"none\";\n      newTaskCard.style.height =\n        newTaskCard.style.height === \"5rem\" ? \"auto\" : \"5rem\";\n      visibleContent.classList.toggle(\"card-task-visible-border\");\n    });\n\n    // append all elements\n    cardTaskBtnContainer.append(cardTaskDeleteBtn, cardTaskEditBtn);\n    visibleContent.append(checkBox, cardTaskTitle, cardTaskPriority);\n    hiddenContent.append(\n      cardTaskProject,\n      cardTaskDate,\n      cardTaskDescription,\n      cardTaskBtnContainer\n    );\n\n    newTaskCard.append(visibleContent, hiddenContent);\n\n    return newTaskCard;\n  }\n\n  editTaskForm = (taskId) => {\n    const taskObject = NewTaskManager.taskList.find(\n      (task) => task.data.id === taskId\n    );\n\n    if (taskObject) {\n      // blurred screen for background\n      const blurredScreen = document.createElement(\"div\");\n      blurredScreen.classList.add(\"blurred-screen\");\n      //create form div\n      const editForm = document.createElement(\"div\");\n      editForm.className = \"edit-form\";\n      // create title\n      const editTitle = document.createElement(\"h2\");\n      editTitle.textContent = \"Title\";\n      editTitle.className = \"edit-title\";\n      //create title input field with the value of the task to edit\n      const editTitleInput = document.createElement(\"input\");\n      editTitleInput.className = \"edit-title-input\";\n      editTitleInput.value = taskObject.data.title;\n      //create project field\n      const editProject = document.createElement(\"h2\");\n      editProject.textContent = \"Project\";\n      editProject.className = \"edit-project-title\";\n      //create project selection field with the value of the task to edit\n      const editProjectInput = document.createElement(\"select\");\n      editProjectInput.className = \"edit-project-input\";\n      //create the options to select\"\n      const optionElements = Array.from(\n        document.querySelectorAll(\".new-project-nav-btn\")\n      );\n      const innerHTMLArray = optionElements.map(function (element) {\n        return element.textContent;\n      });\n\n      innerHTMLArray.forEach((optionText) => {\n        const option = document.createElement(\"option\");\n        option.value = optionText;\n        option.textContent = optionText;\n        editProjectInput.appendChild(option);\n      });\n\n      //create date\n      const editDate = document.createElement(\"h2\");\n      editDate.textContent = \"Date\";\n      editDate.className = \"edit-date\";\n      //create date input field with the value of the task to edit\n      const editDateInput = document.createElement(\"input\");\n      editDateInput.className = \"edit-date-input\";\n      editDateInput.type = \"date\";\n      editDateInput.value = taskObject.data.date;\n      //create priority\n      const editPriority = document.createElement(\"h2\");\n      editPriority.textContent = \"Priority\";\n      editPriority.className = \"edit-priority\";\n      //create priority input field with the value of the task to edit\n      const editPriorityInput = document.createElement(\"select\");\n      editPriorityInput.className = \"edit-priority-input\";\n      // create the options to select\n      const options = [\"High\", \"Medium\", \"Low\"];\n      options.forEach((optionText) => {\n        const option = document.createElement(\"option\");\n        option.value = optionText;\n        option.textContent = optionText;\n        editPriorityInput.appendChild(option);\n        editPriorityInput.value = taskObject.data.priority;\n      });\n\n      // create description\n      const editDescription = document.createElement(\"h2\");\n      editDescription.textContent = \"Description\";\n      editDescription.className = \"edit-description\";\n      //create description input field with the value of the task to edit\n      const editDescriptionInput = document.createElement(\"textarea\");\n      editDescriptionInput.className = \"edit-description-input\";\n      editDescriptionInput.value = taskObject.data.description;\n      //create button container\n      const editButtonContainer = document.createElement(\"div\");\n      editButtonContainer.className = \"edit-button-container\";\n      // create button for submitting the changes\n      const editSubmitBtn = document.createElement(\"button\");\n      editSubmitBtn.className = \"edit-submit-button\";\n      editSubmitBtn.textContent = \"Save\";\n\n      //add event listener to the edit submit button\n      editSubmitBtn.addEventListener(\"click\", () => {\n        //change the task values in the taskList\n        let taskIndex = NewTaskManager.taskList.findIndex(\n          (task) => task.data.id === taskId\n        );\n\n        NewTaskManager.taskList[taskIndex].data.title = editTitleInput.value;\n        NewTaskManager.taskList[taskIndex].data.date = editDateInput.value;\n        NewTaskManager.taskList[taskIndex].data.project =\n          editProjectInput.value;\n        NewTaskManager.taskList[taskIndex].data.priority =\n          editPriorityInput.value;\n        NewTaskManager.taskList[taskIndex].data.description =\n          editDescriptionInput.value;\n        // create new taskData for the new taskCard after editing\n        const taskData = {\n          title: NewTaskManager.taskList[taskIndex].data.title,\n          date: NewTaskManager.taskList[taskIndex].data.date,\n          project: NewTaskManager.taskList[taskIndex].data.project,\n          priority: NewTaskManager.taskList[taskIndex].data.priority,\n          description: NewTaskManager.taskList[taskIndex].data.description,\n          id: taskId,\n        };\n        // create new task Card\n        const updatedTaskCard = this.createTaskCard(taskData);\n        updatedTaskCard.style.height = \"5rem\";\n        NewTaskManager.taskList[taskIndex].element = updatedTaskCard;\n\n        // remove form and blurry screen\n        this.currentContent.removeChild(editForm);\n        this.currentContent.removeChild(blurredScreen);\n        // update screen\n        this.updateScreen();\n      });\n\n      //create cancel button\n      let editCancelBtn = document.createElement(\"button\");\n      editCancelBtn.className = \"edit-cancel-button\";\n      editCancelBtn.textContent = \"Cancel\";\n\n      // ad event listener with function to the cancel button\n      editCancelBtn.addEventListener(\"click\", () => {\n        this.currentContent.removeChild(editForm);\n        this.currentContent.removeChild(blurredScreen);\n        this.formActive = false;\n      });\n\n      //append the buttons to the button container\n      editButtonContainer.append(editSubmitBtn, editCancelBtn);\n      //append the elements to the form\n      editForm.append(\n        editTitle,\n        editTitleInput,\n        editProject,\n        editProjectInput,\n        editDate,\n        editDateInput,\n        editPriority,\n        editPriorityInput,\n        editDescription,\n        editDescriptionInput,\n        editButtonContainer\n      );\n      this.currentContent.append(editForm, blurredScreen);\n    }\n  };\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NewTaskManager);\n\n// TODO:\n// delete project button + funktion erstellen\n// projecte anhand der taskdata.project sortieren und dem richtigen project appenden\n//task card ändern damit das project mit drauf steht\n// function iwie so : wenn taskData.project gleich ist wie taskButton dass soll es auf diese seite appendet werden\n// vorgehen : iteriere durch die tasklist nach den projecten, wenn ein project den selben wert hab wie ein textContent eines buttons dann wird dieser task wem button entsprechenden seite hinzugefügt\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/newTaskManager.js\n");

/***/ }),

/***/ "./src/projectManager.js":
/*!*******************************!*\
  !*** ./src/projectManager.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _DOM__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DOM */ \"./src/DOM.js\");\n/* harmony import */ var _newTaskManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./newTaskManager */ \"./src/newTaskManager.js\");\n\n\n\nclass ProjectManager {\n  constructor() {\n    this.taskList = _newTaskManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"].taskList;\n    this.newProjectButton = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].newProjectButton;\n    this.projectNav = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].projects;\n    this.initializeEventListeners();\n    this.newProjectForm = false;\n    this.titleInput = null;\n    this.currentContent = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentContent;\n    this.projectButtonCount = 0;\n  }\n  // event listener for the new project button\n  initializeEventListeners() {\n    this.newProjectButton.addEventListener(\n      \"click\",\n      this.addNewProject.bind(this)\n    );\n  }\n\n  //function for the input form to create a new project\n  addNewProject() {\n    if (this.newProjectForm) {\n      alert(\"Please fill out the new project form\");\n    } else {\n      const newForm = document.createElement(\"div\");\n      newForm.className = \"project-form\";\n\n      this.titleInput = document.createElement(\"input\");\n      this.titleInput.className = \"project-title-input\";\n      this.titleInput.placeholder = \"Project Title\";\n\n      const buttonContainer = document.createElement(\"div\");\n      buttonContainer.className = \"project-button-container\";\n\n      const saveButton = document.createElement(\"button\");\n      saveButton.className = \"project-save-button\";\n      saveButton.textContent = \"Save\";\n      saveButton.addEventListener(\n        \"click\",\n        this.createProjectNavLink.bind(this)\n      );\n\n      const cancelButton = document.createElement(\"button\");\n      cancelButton.className = \"project-cancel-button\";\n      cancelButton.textContent = \"Cancel\";\n      cancelButton.addEventListener(\"click\", this.cancelNewProject.bind(this));\n\n      buttonContainer.append(saveButton, cancelButton);\n      newForm.append(this.titleInput, buttonContainer);\n      //\n      this.projectNav.appendChild(newForm);\n      this.newProjectForm = true;\n    }\n  }\n\n  // function for adding a button with the project title to the nav bar\n  createProjectNavLink() {\n    if (this.titleInput.value !== \"\") {\n      //create a div for the elements\n      const newProjectDiv = document.createElement(\"div\");\n      newProjectDiv.className = \"new-project-div\";\n\n      //create new button with the value of the input\n      const newNavLink = document.createElement(\"button\");\n      newNavLink.addEventListener(\"click\", (event) => {\n        //search for target button ID\n        let projectEvent = event.target.closest(\".new-project-nav-btn\");\n        let projectId = projectEvent.id;\n        let projectNum = projectId.substring(8);\n\n        // create project page and append it to the screen\n        this.currentContent.innerHTML = \"\";\n        const newProjectPage = document.createElement(\"div\");\n        newProjectPage.setAttribute(\"id\", `projectPage-${projectNum}`);\n        newProjectPage.className = \"project-page\";\n\n        this.currentContent.appendChild(newProjectPage);\n      });\n\n      newNavLink.className = \"new-project-nav-btn\";\n      this.projectButtonCount++;\n      //set id for customization the project button for later use\n      newNavLink.setAttribute(\"id\", `project-${this.projectButtonCount}`);\n      newNavLink.textContent = this.titleInput.value;\n      //add an icon before the title\n      const icon = document.createElement(\"img\");\n      icon.className = \"project-icon\";\n      icon.src = \"../src/media/target.png\";\n\n      //create delete button for the navbar button\n      const deleteProject = document.createElement(\"\");\n\n      newProjectDiv.append(icon, newNavLink);\n      //newNavLink.prepend(icon);\n\n      this.projectNav.appendChild(newProjectDiv);\n      // find the project form to remove it from the DOM\n      const projectForm = document.querySelector(\".project-form\");\n      this.projectNav.removeChild(projectForm);\n\n      /*//add new page for the projects for later activation\n      const projectPage = document.createElement(\"div\");\n      projectPage.setAttribute(\"id\", `projectPage-${this.projectButtonCount}`);\n      projectPage.className = \"project-page\";\n      this.currentContent.appendChild(projectPage);*/\n\n      // set back the value of the project form so a new one can pop up\n      this.newProjectForm = false;\n    } else {\n      alert(\"please fill out the title input\");\n    }\n  }\n\n  // function for canceling the new project form\n  cancelNewProject() {\n    this.titleInput.value = \"\";\n    const projectForm = document.querySelector(\".project-form\");\n    this.projectNav.removeChild(projectForm);\n    this.newProjectForm = false;\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ProjectManager);\n\n// new project input form save click:\n// dann programmieren dass man einer task aus der task list ein projektname zuweisen kann vllt als object attribute\n// funktion schreiben welche die projekte auch anhand der project attribute auf die richtige seite hinzufügt (updateScreen?)\n// project button delete einbauen (button zum löschen eines project buttons, dabei muss die project count -1 genommen werden)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/projectManager.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;