/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/DOM.js":
/*!********************!*\
  !*** ./src/DOM.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst DomElements = {\n  //container:\n  currentContent: document.querySelector(\".currentContent\"),\n  container: document.querySelector(\".container\"),\n  allViewPage: document.querySelector(\".all-view\"),\n  tomorrowViewPage: document.querySelector(\".tomorrow-view\"),\n  todayViewPage: document.querySelector(\".today-view\"),\n  upcomingViewPage: document.querySelector(\".upcoming-view\"),\n  projects: document.querySelector(\".projects\"),\n  addTaskTitle: document.querySelector(\".add-task-title\"),\n  //Buttons:\n  addTaskButton: document.querySelector(\".add-task\"),\n  allTasksButton: document.querySelector(\".all-tasks\"),\n  todayTasksButton: document.querySelector(\".today-tasks\"),\n  tomorrowTasksButton: document.querySelector(\".tomorrow-tasks\"),\n  upcomingTasksButton: document.querySelector(\".upcoming-tasks\"),\n  newProjectButton: document.querySelector(\".new-project-button\"),\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DomElements);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRE9NLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWUsV0FBVyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kby0tdG9wLy4vc3JjL0RPTS5qcz9mZWIxIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IERvbUVsZW1lbnRzID0ge1xuICAvL2NvbnRhaW5lcjpcbiAgY3VycmVudENvbnRlbnQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY3VycmVudENvbnRlbnRcIiksXG4gIGNvbnRhaW5lcjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jb250YWluZXJcIiksXG4gIGFsbFZpZXdQYWdlOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmFsbC12aWV3XCIpLFxuICB0b21vcnJvd1ZpZXdQYWdlOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnRvbW9ycm93LXZpZXdcIiksXG4gIHRvZGF5Vmlld1BhZ2U6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudG9kYXktdmlld1wiKSxcbiAgdXBjb21pbmdWaWV3UGFnZTogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi51cGNvbWluZy12aWV3XCIpLFxuICBwcm9qZWN0czogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9qZWN0c1wiKSxcbiAgYWRkVGFza1RpdGxlOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmFkZC10YXNrLXRpdGxlXCIpLFxuICAvL0J1dHRvbnM6XG4gIGFkZFRhc2tCdXR0b246IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWRkLXRhc2tcIiksXG4gIGFsbFRhc2tzQnV0dG9uOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmFsbC10YXNrc1wiKSxcbiAgdG9kYXlUYXNrc0J1dHRvbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50b2RheS10YXNrc1wiKSxcbiAgdG9tb3Jyb3dUYXNrc0J1dHRvbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50b21vcnJvdy10YXNrc1wiKSxcbiAgdXBjb21pbmdUYXNrc0J1dHRvbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi51cGNvbWluZy10YXNrc1wiKSxcbiAgbmV3UHJvamVjdEJ1dHRvbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5uZXctcHJvamVjdC1idXR0b25cIiksXG59O1xuXG5leHBvcnQgZGVmYXVsdCBEb21FbGVtZW50cztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/DOM.js\n");

/***/ }),

/***/ "./src/handleViewOptions.js":
/*!**********************************!*\
  !*** ./src/handleViewOptions.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _DOM__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DOM */ \"./src/DOM.js\");\n/* harmony import */ var _newTaskManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./newTaskManager */ \"./src/newTaskManager.js\");\n\n\n\nclass HandleNavButtons {\n  static currentPage = \"allTasks\";\n  static viewAllTasks = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].allViewPage;\n  constructor(taskManager) {\n    this.taskManager = taskManager;\n    //link buttons\n    this.allTasksButton = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].allTasksButton;\n    this.tomorrowTasksButton = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tomorrowTasksButton;\n    this.todayTasksButton = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].todayTasksButton;\n    this.upcomingTasksButton = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].upcomingTasksButton;\n    this.navButtons = [\n      this.allTasksButton,\n      this.todayTasksButton,\n      this.tomorrowTasksButton,\n      this.upcomingTasksButton,\n    ];\n    //link containers\n    this.currentContent = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentContent;\n    this.viewAllTasks = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].allViewPage;\n    this.viewTodayTasks = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].todayViewPage;\n    this.viewTomorrowTasks = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tomorrowViewPage;\n    this.viewUpcomingTasks = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].upcomingViewPage;\n    this.sideNavPages = Array.from(document.querySelectorAll(\".task-page\"));\n\n    //function to add the event listeners\n    this.initializeEventListeners();\n  }\n  //setting event listeners up\n  initializeEventListeners() {\n    this.allTasksButton.addEventListener(\"click\", () => this.displayAllTasks());\n    this.todayTasksButton.addEventListener(\"click\", () =>\n      this.displayTodayTasks()\n    );\n    this.tomorrowTasksButton.addEventListener(\"click\", () =>\n      this.displayTomorrowTasks()\n    );\n    this.upcomingTasksButton.addEventListener(\"click\", () =>\n      this.displayUpcomingTasks()\n    );\n  }\n\n  // function for the page with all tasks sorted by priority\n  displayAllTasks() {\n    // hide all other pages\n    this.sideNavPages.forEach((page) => {\n      page.style.display = \"none\";\n    });\n\n    const projectPages = document.querySelectorAll(\".project-page\");\n    projectPages.forEach((page) => {\n      page.style.display = \"none\";\n    });\n\n    this.viewAllTasks.style.display = \"flex\";\n    HandleNavButtons.currentPage = \"allTasks\";\n    this.taskManager.updateScreen();\n  }\n\n  // function to display the page with all tasks with the date of today\n  displayTodayTasks() {\n    // hide all other pages\n    this.sideNavPages.forEach((page) => {\n      page.style.display = \"none\";\n    });\n\n    const projectPages = document.querySelectorAll(\".project-page\");\n    projectPages.forEach((page) => {\n      page.style.display = \"none\";\n    });\n\n    this.viewTodayTasks.style.display = \"flex\";\n    HandleNavButtons.currentPage = \"todayTasks\";\n    this.taskManager.updateScreen();\n  }\n\n  // function to display the page with all tasks with the date of tomorrow\n  displayTomorrowTasks() {\n    // hide all other pages\n    this.sideNavPages.forEach((page) => {\n      page.style.display = \"none\";\n    });\n\n    const projectPages = document.querySelectorAll(\".project-page\");\n    projectPages.forEach((page) => {\n      page.style.display = \"none\";\n    });\n\n    this.viewTomorrowTasks.style.display = \"flex\";\n    HandleNavButtons.currentPage = \"tomorrowTasks\";\n    this.taskManager.updateScreen();\n  }\n\n  // function to display the page with alls tasks with the date of tomorrow - future\n  displayUpcomingTasks() {\n    // hide all other pages\n    this.sideNavPages.forEach((page) => {\n      page.style.display = \"none\";\n    });\n\n    const projectPages = document.querySelectorAll(\".project-page\");\n    projectPages.forEach((page) => {\n      page.style.display = \"none\";\n    });\n\n    this.viewUpcomingTasks.style.display = \"flex\";\n    HandleNavButtons.currentPage = \"upcomingTasks\";\n    this.taskManager.updateScreen();\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HandleNavButtons);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaGFuZGxlVmlld09wdGlvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdDO0FBQ2M7O0FBRTlDO0FBQ0E7QUFDQSx3QkFBd0IsNENBQVc7QUFDbkM7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDRDQUFXO0FBQ3JDLCtCQUErQiw0Q0FBVztBQUMxQyw0QkFBNEIsNENBQVc7QUFDdkMsK0JBQStCLDRDQUFXO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDRDQUFXO0FBQ3JDLHdCQUF3Qiw0Q0FBVztBQUNuQywwQkFBMEIsNENBQVc7QUFDckMsNkJBQTZCLDRDQUFXO0FBQ3hDLDZCQUE2Qiw0Q0FBVztBQUN4Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWUsZ0JBQWdCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvLS10b3AvLi9zcmMvaGFuZGxlVmlld09wdGlvbnMuanM/NjhkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRG9tRWxlbWVudHMgZnJvbSBcIi4vRE9NXCI7XG5pbXBvcnQgTmV3VGFza01hbmFnZXIgZnJvbSBcIi4vbmV3VGFza01hbmFnZXJcIjtcblxuY2xhc3MgSGFuZGxlTmF2QnV0dG9ucyB7XG4gIHN0YXRpYyBjdXJyZW50UGFnZSA9IFwiYWxsVGFza3NcIjtcbiAgc3RhdGljIHZpZXdBbGxUYXNrcyA9IERvbUVsZW1lbnRzLmFsbFZpZXdQYWdlO1xuICBjb25zdHJ1Y3Rvcih0YXNrTWFuYWdlcikge1xuICAgIHRoaXMudGFza01hbmFnZXIgPSB0YXNrTWFuYWdlcjtcbiAgICAvL2xpbmsgYnV0dG9uc1xuICAgIHRoaXMuYWxsVGFza3NCdXR0b24gPSBEb21FbGVtZW50cy5hbGxUYXNrc0J1dHRvbjtcbiAgICB0aGlzLnRvbW9ycm93VGFza3NCdXR0b24gPSBEb21FbGVtZW50cy50b21vcnJvd1Rhc2tzQnV0dG9uO1xuICAgIHRoaXMudG9kYXlUYXNrc0J1dHRvbiA9IERvbUVsZW1lbnRzLnRvZGF5VGFza3NCdXR0b247XG4gICAgdGhpcy51cGNvbWluZ1Rhc2tzQnV0dG9uID0gRG9tRWxlbWVudHMudXBjb21pbmdUYXNrc0J1dHRvbjtcbiAgICB0aGlzLm5hdkJ1dHRvbnMgPSBbXG4gICAgICB0aGlzLmFsbFRhc2tzQnV0dG9uLFxuICAgICAgdGhpcy50b2RheVRhc2tzQnV0dG9uLFxuICAgICAgdGhpcy50b21vcnJvd1Rhc2tzQnV0dG9uLFxuICAgICAgdGhpcy51cGNvbWluZ1Rhc2tzQnV0dG9uLFxuICAgIF07XG4gICAgLy9saW5rIGNvbnRhaW5lcnNcbiAgICB0aGlzLmN1cnJlbnRDb250ZW50ID0gRG9tRWxlbWVudHMuY3VycmVudENvbnRlbnQ7XG4gICAgdGhpcy52aWV3QWxsVGFza3MgPSBEb21FbGVtZW50cy5hbGxWaWV3UGFnZTtcbiAgICB0aGlzLnZpZXdUb2RheVRhc2tzID0gRG9tRWxlbWVudHMudG9kYXlWaWV3UGFnZTtcbiAgICB0aGlzLnZpZXdUb21vcnJvd1Rhc2tzID0gRG9tRWxlbWVudHMudG9tb3Jyb3dWaWV3UGFnZTtcbiAgICB0aGlzLnZpZXdVcGNvbWluZ1Rhc2tzID0gRG9tRWxlbWVudHMudXBjb21pbmdWaWV3UGFnZTtcbiAgICB0aGlzLnNpZGVOYXZQYWdlcyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi50YXNrLXBhZ2VcIikpO1xuXG4gICAgLy9mdW5jdGlvbiB0byBhZGQgdGhlIGV2ZW50IGxpc3RlbmVyc1xuICAgIHRoaXMuaW5pdGlhbGl6ZUV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cbiAgLy9zZXR0aW5nIGV2ZW50IGxpc3RlbmVycyB1cFxuICBpbml0aWFsaXplRXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5hbGxUYXNrc0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gdGhpcy5kaXNwbGF5QWxsVGFza3MoKSk7XG4gICAgdGhpcy50b2RheVRhc2tzQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PlxuICAgICAgdGhpcy5kaXNwbGF5VG9kYXlUYXNrcygpXG4gICAgKTtcbiAgICB0aGlzLnRvbW9ycm93VGFza3NCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+XG4gICAgICB0aGlzLmRpc3BsYXlUb21vcnJvd1Rhc2tzKClcbiAgICApO1xuICAgIHRoaXMudXBjb21pbmdUYXNrc0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT5cbiAgICAgIHRoaXMuZGlzcGxheVVwY29taW5nVGFza3MoKVxuICAgICk7XG4gIH1cblxuICAvLyBmdW5jdGlvbiBmb3IgdGhlIHBhZ2Ugd2l0aCBhbGwgdGFza3Mgc29ydGVkIGJ5IHByaW9yaXR5XG4gIGRpc3BsYXlBbGxUYXNrcygpIHtcbiAgICAvLyBoaWRlIGFsbCBvdGhlciBwYWdlc1xuICAgIHRoaXMuc2lkZU5hdlBhZ2VzLmZvckVhY2goKHBhZ2UpID0+IHtcbiAgICAgIHBhZ2Uuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgIH0pO1xuXG4gICAgY29uc3QgcHJvamVjdFBhZ2VzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5wcm9qZWN0LXBhZ2VcIik7XG4gICAgcHJvamVjdFBhZ2VzLmZvckVhY2goKHBhZ2UpID0+IHtcbiAgICAgIHBhZ2Uuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgIH0pO1xuXG4gICAgdGhpcy52aWV3QWxsVGFza3Muc3R5bGUuZGlzcGxheSA9IFwiZmxleFwiO1xuICAgIEhhbmRsZU5hdkJ1dHRvbnMuY3VycmVudFBhZ2UgPSBcImFsbFRhc2tzXCI7XG4gICAgdGhpcy50YXNrTWFuYWdlci51cGRhdGVTY3JlZW4oKTtcbiAgfVxuXG4gIC8vIGZ1bmN0aW9uIHRvIGRpc3BsYXkgdGhlIHBhZ2Ugd2l0aCBhbGwgdGFza3Mgd2l0aCB0aGUgZGF0ZSBvZiB0b2RheVxuICBkaXNwbGF5VG9kYXlUYXNrcygpIHtcbiAgICAvLyBoaWRlIGFsbCBvdGhlciBwYWdlc1xuICAgIHRoaXMuc2lkZU5hdlBhZ2VzLmZvckVhY2goKHBhZ2UpID0+IHtcbiAgICAgIHBhZ2Uuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgIH0pO1xuXG4gICAgY29uc3QgcHJvamVjdFBhZ2VzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5wcm9qZWN0LXBhZ2VcIik7XG4gICAgcHJvamVjdFBhZ2VzLmZvckVhY2goKHBhZ2UpID0+IHtcbiAgICAgIHBhZ2Uuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgIH0pO1xuXG4gICAgdGhpcy52aWV3VG9kYXlUYXNrcy5zdHlsZS5kaXNwbGF5ID0gXCJmbGV4XCI7XG4gICAgSGFuZGxlTmF2QnV0dG9ucy5jdXJyZW50UGFnZSA9IFwidG9kYXlUYXNrc1wiO1xuICAgIHRoaXMudGFza01hbmFnZXIudXBkYXRlU2NyZWVuKCk7XG4gIH1cblxuICAvLyBmdW5jdGlvbiB0byBkaXNwbGF5IHRoZSBwYWdlIHdpdGggYWxsIHRhc2tzIHdpdGggdGhlIGRhdGUgb2YgdG9tb3Jyb3dcbiAgZGlzcGxheVRvbW9ycm93VGFza3MoKSB7XG4gICAgLy8gaGlkZSBhbGwgb3RoZXIgcGFnZXNcbiAgICB0aGlzLnNpZGVOYXZQYWdlcy5mb3JFYWNoKChwYWdlKSA9PiB7XG4gICAgICBwYWdlLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICB9KTtcblxuICAgIGNvbnN0IHByb2plY3RQYWdlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIucHJvamVjdC1wYWdlXCIpO1xuICAgIHByb2plY3RQYWdlcy5mb3JFYWNoKChwYWdlKSA9PiB7XG4gICAgICBwYWdlLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICB9KTtcblxuICAgIHRoaXMudmlld1RvbW9ycm93VGFza3Muc3R5bGUuZGlzcGxheSA9IFwiZmxleFwiO1xuICAgIEhhbmRsZU5hdkJ1dHRvbnMuY3VycmVudFBhZ2UgPSBcInRvbW9ycm93VGFza3NcIjtcbiAgICB0aGlzLnRhc2tNYW5hZ2VyLnVwZGF0ZVNjcmVlbigpO1xuICB9XG5cbiAgLy8gZnVuY3Rpb24gdG8gZGlzcGxheSB0aGUgcGFnZSB3aXRoIGFsbHMgdGFza3Mgd2l0aCB0aGUgZGF0ZSBvZiB0b21vcnJvdyAtIGZ1dHVyZVxuICBkaXNwbGF5VXBjb21pbmdUYXNrcygpIHtcbiAgICAvLyBoaWRlIGFsbCBvdGhlciBwYWdlc1xuICAgIHRoaXMuc2lkZU5hdlBhZ2VzLmZvckVhY2goKHBhZ2UpID0+IHtcbiAgICAgIHBhZ2Uuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgIH0pO1xuXG4gICAgY29uc3QgcHJvamVjdFBhZ2VzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5wcm9qZWN0LXBhZ2VcIik7XG4gICAgcHJvamVjdFBhZ2VzLmZvckVhY2goKHBhZ2UpID0+IHtcbiAgICAgIHBhZ2Uuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgIH0pO1xuXG4gICAgdGhpcy52aWV3VXBjb21pbmdUYXNrcy5zdHlsZS5kaXNwbGF5ID0gXCJmbGV4XCI7XG4gICAgSGFuZGxlTmF2QnV0dG9ucy5jdXJyZW50UGFnZSA9IFwidXBjb21pbmdUYXNrc1wiO1xuICAgIHRoaXMudGFza01hbmFnZXIudXBkYXRlU2NyZWVuKCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgSGFuZGxlTmF2QnV0dG9ucztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/handleViewOptions.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _DOM__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DOM */ \"./src/DOM.js\");\n/* harmony import */ var _newTaskManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./newTaskManager */ \"./src/newTaskManager.js\");\n/* harmony import */ var _handleViewOptions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./handleViewOptions */ \"./src/handleViewOptions.js\");\n/* harmony import */ var _projectManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./projectManager */ \"./src/projectManager.js\");\nconsole.log(\"hello\");\n\n\n\n\n\n\nconst newTaskManager = new _newTaskManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\nconst handleSideNavButtons = new _handleViewOptions__WEBPACK_IMPORTED_MODULE_2__[\"default\"](newTaskManager);\nconst projectManager = new _projectManager__WEBPACK_IMPORTED_MODULE_3__[\"default\"](newTaskManager);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7QUFFZ0M7QUFDYztBQUNLO0FBQ0w7O0FBRTlDLDJCQUEyQix1REFBYztBQUN6QyxpQ0FBaUMsMERBQWdCO0FBQ2pELDJCQUEyQix1REFBYyIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8tLXRvcC8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnNvbGUubG9nKFwiaGVsbG9cIik7XG5cbmltcG9ydCBEb21FbGVtZW50cyBmcm9tIFwiLi9ET01cIjtcbmltcG9ydCBOZXdUYXNrTWFuYWdlciBmcm9tIFwiLi9uZXdUYXNrTWFuYWdlclwiO1xuaW1wb3J0IEhhbmRsZU5hdkJ1dHRvbnMgZnJvbSBcIi4vaGFuZGxlVmlld09wdGlvbnNcIjtcbmltcG9ydCBQcm9qZWN0TWFuYWdlciBmcm9tIFwiLi9wcm9qZWN0TWFuYWdlclwiO1xuXG5jb25zdCBuZXdUYXNrTWFuYWdlciA9IG5ldyBOZXdUYXNrTWFuYWdlcigpO1xuY29uc3QgaGFuZGxlU2lkZU5hdkJ1dHRvbnMgPSBuZXcgSGFuZGxlTmF2QnV0dG9ucyhuZXdUYXNrTWFuYWdlcik7XG5jb25zdCBwcm9qZWN0TWFuYWdlciA9IG5ldyBQcm9qZWN0TWFuYWdlcihuZXdUYXNrTWFuYWdlcik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/newTaskManager.js":
/*!*******************************!*\
  !*** ./src/newTaskManager.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _DOM__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DOM */ \"./src/DOM.js\");\n/* harmony import */ var _handleViewOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handleViewOptions */ \"./src/handleViewOptions.js\");\n\n\n\nclass NewTaskManager {\n  static instance = null;\n  static taskList = [];\n  static getTaskList() {\n    return NewTaskManager.taskList;\n  }\n\n  constructor() {\n    if (NewTaskManager.instance) {\n      return NewTaskManager.instance;\n    }\n    this.sideNav = document.querySelector(\".sideNav\");\n    this.formActive = false;\n    this.addTaskButton = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addTaskButton;\n    this.addTaskTitle = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addTaskTitle;\n    this.currentContent = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentContent;\n    this.allViewPage = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].allViewPage;\n    this.todaysTasksPage = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].todayViewPage;\n    this.tomorrowsTasksPage = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tomorrowViewPage;\n    this.upcomingTasksPage = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].upcomingViewPage;\n    this.allTasksButton = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].allTasksButton;\n    this.todayTasksButton = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].todayTasksButton;\n    this.tomorrowTasksButton = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tomorrowTasksButton;\n    this.upcomingTasksButton = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].upcomingTasksButton;\n    this.counter = 1;\n    this.navButtons = [\n      this.allTasksButton,\n      this.todayTasksButton,\n      this.tomorrowTasksButton,\n      this.upcomingTasksButton,\n    ];\n\n    this.initializeEventListeners();\n    NewTaskManager.instance = this;\n    this.loadTasksFromStorage();\n    this.loadStartPage();\n  }\n\n  initializeEventListeners() {\n    this.addTaskButton.addEventListener(\"click\", () => this.newTaskForm());\n\n    this.addTaskButton.addEventListener(\"mouseenter\", () => {\n      this.addTaskTitle.style.opacity = \"1\";\n      this.addTaskTitle.style.transform = \"translateX(0)\";\n      this.addTaskTitle.style.zIndex = \"10\";\n    });\n\n    this.addTaskButton.addEventListener(\"mouseleave\", () => {\n      this.addTaskTitle.style.opacity = \"0\";\n      this.addTaskTitle.style.transform = \"translateX(100%)\";\n      this.addTaskTitle.style.zIndex = \"-1\";\n    });\n  }\n\n  // load the page of all tasks to display them directly from the storage\n  loadStartPage() {\n    _handleViewOptions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].viewAllTasks.style.display = \"flex\";\n    this.counterReset();\n  }\n\n  //function to save the taskList to the local storage\n  saveTasksToLocalStorage() {\n    const tasksData = NewTaskManager.taskList.map((task) => task.data);\n    localStorage.setItem(\"tasks\", JSON.stringify(tasksData));\n  }\n\n  //function to load the tasklist from the local storage and display them through updateScreen();\n  loadTasksFromStorage() {\n    const storedTasks = localStorage.getItem(\"tasks\");\n    if (storedTasks) {\n      const tasksData = JSON.parse(storedTasks);\n      tasksData.forEach((taskData) => {\n        const taskElement = this.createTaskCard(taskData);\n        NewTaskManager.taskList.push({ data: taskData, element: taskElement });\n      });\n      this.updateScreen();\n    }\n  }\n\n  counterReset() {\n    if (this.counter > 100) {\n      this.counter = 1;\n    }\n  }\n\n  //creates a new task form pop up window when user clicks on the plus icon\n  newTaskForm() {\n    // checks if the form is already displayed\n    if (this.formActive === false) {\n      this.formActive = true;\n      //remove all containers for the form pop up\n\n      //created the form to append\n      const newTaskForm = this.createFormElements();\n      // newTaskForm.classList.add(\"new-task\");\n      //creates the blurry background\n      const blurredScreen = document.createElement(\"div\");\n      blurredScreen.classList.add(\"blurred-screen\");\n\n      this.currentContent.append(newTaskForm, blurredScreen);\n    } else {\n      alert(\"Please fill out the displayed form\");\n    }\n  }\n\n  //creates the elements for the form\n  createFormElements() {\n    const newTaskForm = document.createElement(\"div\");\n    newTaskForm.classList.add(\"new-task\");\n\n    this.titleInput = this.createInputField(\"Title\", \"title\", \"text\");\n    this.dateInput = this.createInputField(\"Date\", \"date\", \"date\");\n    this.prioritySelect = this.createSelectField(\"priority-input\", [\n      \"High\",\n      \"Medium\",\n      \"Low\",\n    ]);\n    this.projectSelection = this.createProjectSelection();\n    this.descriptionInput = this.createDescriptionField(\"description\");\n\n    const buttonContainer = document.createElement(\"div\");\n    buttonContainer.classList.add(\"button-container\");\n\n    const submitButton = this.createButtons(\"Submit\", \"submit-button\");\n    submitButton.addEventListener(\"click\", () => {\n      this.handleSubmit();\n    });\n    const deleteButton = this.createButtons(\"Delete\", \"delete-button\");\n    deleteButton.addEventListener(\"click\", () => {\n      this.handleDelete();\n    });\n\n    buttonContainer.append(submitButton, deleteButton);\n\n    newTaskForm.append(\n      this.titleInput,\n      this.dateInput,\n      this.prioritySelect,\n      this.projectSelection,\n      this.descriptionInput,\n      buttonContainer\n    );\n\n    return newTaskForm;\n  }\n\n  //creates the input fields of the form\n  createInputField(headerText, inputClass, type) {\n    const inputContainer = document.createElement(\"div\");\n    inputContainer.classList.add(\"form-div\");\n\n    const inputHeader = document.createElement(\"label\");\n    inputHeader.textContent = headerText;\n    inputHeader.classList.add(`${inputClass}-caption`);\n\n    const input = document.createElement(\"input\");\n    input.type = type;\n    input.classList.add(`${inputClass}-input`, \"formInput\");\n\n    inputContainer.append(inputHeader, input);\n    return inputContainer;\n  }\n\n  //creates the select field of the form\n  createSelectField(selectClass, options) {\n    const inputContainer = document.createElement(\"div\");\n    inputContainer.classList.add(\"form-div\");\n\n    const label = document.createElement(\"label\");\n    label.textContent = \"Priority\";\n    label.classList.add(\"priority-caption\");\n\n    const select = document.createElement(\"select\");\n    select.classList.add(selectClass, \"formInput\");\n\n    options.forEach((optionText) => {\n      const option = document.createElement(\"option\");\n      option.value = optionText;\n      option.textContent = optionText;\n      select.appendChild(option);\n    });\n\n    inputContainer.append(label, select);\n    return inputContainer;\n  }\n\n  // creates the project selection field of the form\n  createProjectSelection() {\n    const projectContainer = document.createElement(\"div\");\n    projectContainer.classList.add(\"form-div\");\n\n    const label = document.createElement(\"label\");\n    label.classList.add(\"form-project-label\");\n    label.textContent = \"Project\";\n\n    const select = document.createElement(\"select\");\n    select.classList.add(\"form-project-select\");\n    select.classList.add(\"formInput\");\n\n    // search for all created projects in the DOM\n    const optionElements = Array.from(\n      document.querySelectorAll(\".new-project-nav-btn\")\n    );\n\n    //filter the elements for their innerHTML to add them to the selection\n    const innerHTMLArray = optionElements.map(function (element) {\n      return element.textContent;\n    });\n\n    //adding option for No Project\n    const noProject = \"No Project\";\n    innerHTMLArray.push(noProject);\n\n    innerHTMLArray.forEach((optionText) => {\n      const option = document.createElement(\"option\");\n      option.value = optionText;\n      option.textContent = optionText;\n      select.appendChild(option);\n    });\n\n    projectContainer.append(label, select);\n    return projectContainer;\n  }\n\n  //creates the description field of the form\n  createDescriptionField(descriptionClass) {\n    const descriptionContainer = document.createElement(\"div\");\n    descriptionContainer.classList.add(\"form-div\");\n\n    const label = document.createElement(\"label\");\n    label.classList.add(`${descriptionClass}-caption`);\n    label.textContent = \"Description\";\n\n    const textArea = document.createElement(\"textarea\");\n    textArea.classList.add(`${descriptionClass}-input`, \"formInput\");\n\n    descriptionContainer.append(label, textArea);\n    return descriptionContainer;\n  }\n\n  //creates the buttons of the form\n  createButtons(buttonText, buttonClass) {\n    const button = document.createElement(\"button\");\n    button.textContent = buttonText;\n    button.classList.add(buttonClass, \"form-button\");\n\n    return button;\n  }\n\n  // function for the delete button of the new task form\n  handleDelete() {\n    const allViewPage = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].allViewPage;\n    this.titleInput.value = \"\";\n    this.dateInput.value = \"\";\n    this.prioritySelect.value = \"\";\n    this.descriptionInput.value = \"\";\n    allViewPage.style.display = \"flex\";\n    this.formActive = false;\n    this.currentContent.removeChild(document.querySelector(\".new-task\"));\n    this.currentContent.removeChild(document.querySelector(\".blurred-screen\"));\n    this.todaysTasksPage.style.display = \"none\";\n    this.tomorrowsTasksPage.style.display = \"none\";\n    this.upcomingTasksPage.style.display = \"none\";\n    this.saveTasksToLocalStorage();\n  }\n\n  //submit handler\n  handleSubmit() {\n    const allViewPage = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].allViewPage;\n    const taskData = {\n      title: this.titleInput.querySelector(\".title-input\").value,\n      date: this.dateInput.querySelector(\".date-input\").value,\n      priority: this.prioritySelect.querySelector(\".priority-input\").value,\n      description:\n        this.descriptionInput.querySelector(\".description-input\").value,\n      id: `new-task-card-${this.counter}`,\n      project: this.projectSelection.querySelector(\".form-project-select\")\n        .value,\n      isChecked: false,\n    };\n\n    this.counter++;\n\n    const newTaskCard = this.createTaskCard(taskData);\n    newTaskCard.style.height = \"5rem\";\n    NewTaskManager.taskList.push({ data: taskData, element: newTaskCard });\n\n    // remove task form and blurred screen after clicking on submit\n    const taskForm = document.querySelector(\".new-task\");\n    const blurredScreen = document.querySelector(\".blurred-screen\");\n    this.currentContent.removeChild(taskForm);\n    this.currentContent.removeChild(blurredScreen);\n\n    // appending the tasks to the current content screen\n    allViewPage.style.display = \"flex\";\n    this.todaysTasksPage.style.display = \"none\";\n    this.tomorrowsTasksPage.style.display = \"none\";\n    this.upcomingTasksPage.style.display = \"none\";\n    this.formActive = false;\n\n    // updating the screen with the tasks in the array\n    this.saveTasksToLocalStorage();\n    this.updateScreen();\n  }\n\n  // function to detect todays date and format it like the date in the tasks\n  isToday() {\n    const today = new Date();\n    const day = String(today.getDate()).padStart(2, \"0\");\n    const month = String(today.getMonth() + 1).padStart(2, \"0\");\n    const year = today.getFullYear();\n    return `${year}-${month}-${day}`;\n  }\n  //function to detect todays date and add one day for tomorrow date\n  isTomorrow() {\n    const today = new Date();\n    const day = String(today.getDate()).padStart(2, \"0\");\n    const Tomorrow = parseFloat(day) + 1;\n    const month = String(today.getMonth() + 1).padStart(2, \"0\");\n    const year = today.getFullYear();\n\n    return `${year}-${month}-${Tomorrow}`;\n  }\n\n  updateScreen() {\n    // get todays date and the numbers for month and year\n    const today = this.isToday();\n    const tomorrow = this.isTomorrow();\n\n    //filter tasklist for all tasks\n    const allTasks = NewTaskManager.taskList;\n\n    // filter tasklist by the todays date\n    const todaysTasks = NewTaskManager.taskList.filter(\n      (task) => task.data.date === today\n    );\n\n    // filter tasklist by the date of tomorrow\n    const tomorrowTasks = NewTaskManager.taskList.filter(\n      (task) => task.data.date === tomorrow\n    );\n\n    //filter tasks by date bigger than today\n    const upcomingTasks = NewTaskManager.taskList.filter(\n      (task) => task.data.date > tomorrow\n    );\n\n    //sort tasks after priority\n    NewTaskManager.taskList.sort(\n      (a, b) =>\n        this.priorityToNumber(b.data.priority) -\n        this.priorityToNumber(a.data.priority)\n    );\n\n    //collect all project pages which got created\n    const projectPages = Array.from(document.querySelectorAll(\".project-page\"));\n\n    //clear all task pages\n    this.allViewPage.innerHTML = \"\";\n    this.todaysTasksPage.innerHTML = \"\";\n    this.tomorrowsTasksPage.innerHTML = \"\";\n    this.upcomingTasksPage.innerHTML = \"\";\n\n    //append task with priority colorization\n    if (_handleViewOptions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].currentPage === \"allTasks\") {\n      allTasks.forEach((taskObject) =>\n        this.appendTaskToPage(taskObject, this.allViewPage)\n      );\n    } else if (_handleViewOptions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].currentPage === \"todayTasks\") {\n      todaysTasks.forEach((taskObject) =>\n        this.appendTaskToPage(taskObject, this.todaysTasksPage)\n      );\n    } else if (_handleViewOptions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].currentPage === \"tomorrowTasks\") {\n      tomorrowTasks.forEach((taskObject) =>\n        this.appendTaskToPage(taskObject, this.tomorrowsTasksPage)\n      );\n    } else if (_handleViewOptions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].currentPage === \"upcomingTasks\") {\n      upcomingTasks.forEach((taskObject) =>\n        this.appendTaskToPage(taskObject, this.upcomingTasksPage)\n      );\n    } else if (_handleViewOptions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].currentPage === \"project-page\") {\n      //search for the active project page\n      let activePage = projectPages.filter((page) => {\n        let style = window.getComputedStyle(page);\n        return style.display === \"flex\";\n      });\n      activePage = activePage[0];\n      activePage.innerHTML = \"\";\n\n      allTasks.forEach((taskObject) => {\n        if (`Project-${taskObject.data.project}` === activePage.classList[1]) {\n          this.appendTaskToPage(taskObject, activePage);\n        }\n      });\n    }\n\n    //change color from priority title\n    const taskPriorityDiv = document.querySelectorAll(\".card-task-priority\");\n\n    taskPriorityDiv.forEach((task) => {\n      switch (task.innerHTML) {\n        case \"High\":\n          task.classList.add(\"priority-high-title\");\n          break;\n        case \"Medium\":\n          task.classList.add(\"priority-medium-title\");\n          break;\n        case \"Low\":\n          task.classList.add(\"priority-low-title\");\n          break;\n      }\n    });\n\n    //searching for the  buttons to create the functionality to set the active project button\n    const projectNavBar = document.querySelector(\".projects\");\n    this.projectButtons = projectNavBar.querySelectorAll(\n      \".new-project-nav-btn\"\n    );\n\n    this.allButtons = Array.from(this.projectButtons).concat(\n      Array.from(this.navButtons)\n    );\n\n    this.allButtons.forEach((button) => {\n      button.addEventListener(\"click\", (event) => {\n        this.setActiveButton(event.currentTarget);\n      });\n    });\n  }\n\n  setActiveButton(activeButton) {\n    this.allButtons.forEach((button) => {\n      button.classList.remove(\"active\");\n    });\n    activeButton.classList.add(\"active\");\n  }\n\n  // function for appending the tasks\n  appendTaskToPage(taskObject, page) {\n    taskObject.element.className = \"task-card\";\n    if (taskObject.data.isChecked === true) {\n      //change title text decoration and color by checking checkbox\n      taskObject.element.classList.add(\"checked-checkbox-font\");\n      taskObject.element.classList.add(\"checked-checkbox-background\");\n      taskObject.element.children[0].classList.add(\n        \"checked-checkbox-background\"\n      );\n      taskObject.element.children[1].classList.add(\n        \"checked-checkbox-background\"\n      );\n      taskObject.element.children[0].children[0].checked = true;\n    } else if (taskObject.data.isChecked === false) {\n      //change title text decoration and color by checking checkbox\n      taskObject.element.classList.remove(\"checked-checkbox-font\");\n      taskObject.element.classList.remove(\"checked-checkbox-background\");\n    }\n\n    //change color for the priority\n    switch (taskObject.data.priority) {\n      case \"High\":\n        taskObject.element.classList.add(\"priority-high\");\n        break;\n      case \"Medium\":\n        taskObject.element.classList.add(\"priority-medium\");\n        break;\n      case \"Low\":\n        taskObject.element.classList.add(\"priority-low\");\n        break;\n    }\n    page.appendChild(taskObject.element);\n  }\n\n  // function to set the priorities to number so the task list can be ordered by priority\n  priorityToNumber(priority) {\n    switch (priority) {\n      case \"High\":\n        return 3;\n\n      case \"Medium\":\n        return 2;\n\n      case \"Low\":\n        return 1;\n    }\n  }\n\n  // create task card\n  createTaskCard(taskData) {\n    const newTaskCard = document.createElement(\"div\");\n    newTaskCard.dataset.id = taskData.id;\n    newTaskCard.dataset.classList = `Project-${taskData.project.replace(\n      /\\s+/g,\n      \"-\"\n    )}`;\n\n    // container for the not expanded part of the task\n    const visibleContent = document.createElement(\"div\");\n    visibleContent.classList.add(\"card-task-visible\");\n\n    //container for the hidden task part\n    const hiddenContent = document.createElement(\"div\");\n    hiddenContent.classList.add(\"card-task-hidden\");\n    hiddenContent.style.display = \"none\";\n\n    //create checkbox\n    const checkBox = document.createElement(\"input\");\n    checkBox.type = \"checkbox\";\n    checkBox.classList.add(\"card-task-checkbox\");\n\n    checkBox.addEventListener(\"click\", (event) => {\n      event.stopPropagation();\n\n      //find task which gets checked\n      let taskChecked = event.target.closest(\".task-card\");\n      let taskId = taskChecked.dataset.id;\n      let taskChildren = taskChecked.children[0];\n      let taskChildren2 = taskChecked.children[1];\n      const priorityText = taskChildren.children[2];\n\n      // finding task with taskId\n      let index = NewTaskManager.taskList.findIndex(\n        (task) => task.data.id === taskId\n      );\n\n      NewTaskManager.taskList[index].data.isChecked = NewTaskManager.taskList[\n        index\n      ].data.isChecked\n        ? false\n        : true;\n\n      if (checkBox.checked) {\n        //change title text decoration and color by checking checkbox\n        cardTaskTitle.classList.add(\"checked-checkbox-font\");\n        cardTaskPriority.classList.add(\"checked-checkbox-font\");\n        newTaskCard.classList.add(\"checked-checkbox-background\");\n        cardTaskDeleteBtn.classList.add(\"checkbox-checked\");\n        cardTaskEditBtn.classList.add(\"checkbox-checked\");\n        priorityText.classList.add(\"priority-checked\");\n        taskChildren.classList.add(\"checked-checkbox-background\");\n        taskChildren2.classList.add(\"checked-checkbox-background\");\n      } else if (checkBox.checked === false) {\n        cardTaskTitle.classList.remove(\"checked-checkbox-font\");\n        cardTaskPriority.classList.remove(\"checked-checkbox-font\");\n        newTaskCard.classList.remove(\"checked-checkbox-background\");\n        cardTaskDeleteBtn.classList.remove(\"checkbox-checked\");\n        cardTaskEditBtn.classList.remove(\"checkbox-checked\");\n        priorityText.classList.remove(\"priority-checked\");\n        taskChildren.classList.remove(\"checked-checkbox-background\");\n        taskChildren2.classList.remove(\"checked-checkbox-background\");\n      }\n\n      this.saveTasksToLocalStorage();\n    });\n\n    // create title field\n    const cardTaskTitle = document.createElement(\"label\");\n    cardTaskTitle.textContent = taskData.title;\n    cardTaskTitle.classList.add(\"card-task-title\");\n    //setting color for event listener function\n    cardTaskTitle.style.color = \"rgb(59, 59, 59)\";\n\n    // create project field\n    const cardTaskProject = document.createElement(\"label\");\n    cardTaskProject.textContent = `Project: ${taskData.project}`;\n    cardTaskProject.classList.add(\"card-task-project\");\n\n    // create date field\n    const cardTaskDate = document.createElement(\"div\");\n    cardTaskDate.textContent = `DueDate: ${taskData.date}`;\n    cardTaskDate.classList.add(\"card-task-date\");\n\n    //create container for project and date\n    const dateProjectContainer = document.createElement(\"div\");\n    dateProjectContainer.classList.add(\"date-project-container\");\n\n    dateProjectContainer.append(cardTaskProject, cardTaskDate);\n\n    // create selection field\n    const cardTaskPriority = document.createElement(\"div\");\n    cardTaskPriority.textContent = taskData.priority;\n    cardTaskPriority.classList.add(\"card-task-priority\");\n    cardTaskPriority.style.color = \"rgb(59, 59, 59)\";\n\n    // create description field\n    const cardTaskDescription = document.createElement(\"div\");\n    cardTaskDescription.textContent = `Description: ${taskData.description}`;\n    cardTaskDescription.classList.add(\"card-task-description\");\n\n    // create container for delete and change buttons\n    const cardTaskBtnContainer = document.createElement(\"div\");\n    cardTaskBtnContainer.classList.add(\"card-task-btn-container\");\n\n    //create delete button with the function the delete the task\n    const cardTaskDeleteBtn = document.createElement(\"button\");\n    cardTaskDeleteBtn.textContent = \"Delete\";\n    cardTaskDeleteBtn.classList.add(\"card-task-delete-btn\");\n    cardTaskDeleteBtn.addEventListener(\"click\", (event) => {\n      event.stopPropagation();\n      //get task by the class and set it as the id for finding it in the taskList array\n      let taskToDelete = event.target.closest(\".task-card\");\n      let taskId = taskToDelete.dataset.id;\n\n      // finding task with taskId\n      let index = NewTaskManager.taskList.findIndex(\n        (task) => task.data.id === taskId\n      );\n\n      const allPages = Array.from(document.querySelectorAll(\".task-page\"));\n      const allProjectPages = document.querySelectorAll(\".project-page\");\n      allProjectPages.forEach((page) => {\n        allPages.push(page);\n      });\n\n      allPages.forEach((page) => {\n        if (\n          page.classList.contains(\"project-page\") &&\n          page.style.display === \"flex\"\n        ) {\n          //delete the taskCard from the project pages\n          const taskProject = NewTaskManager.taskList[index];\n          const taskProjectX = taskProject.data.project.replace(/\\s+/g, \"-\");\n\n          //find project page\n          const projectPageToDeleteTask = document.querySelector(\n            `.Project-${taskProjectX}`\n          );\n\n          //find taskCard\n          const taskCardToDelete = document.querySelector(\n            `[data-class-list=\"Project-${taskProjectX}\"]`\n          );\n          //remove from the project page\n          projectPageToDeleteTask.removeChild(taskCardToDelete);\n        }\n      });\n\n      //delete the task in the taskList\n      if (index !== -1) {\n        NewTaskManager.taskList.splice(index, 1);\n        this.saveTasksToLocalStorage();\n        this.updateScreen();\n      }\n    });\n\n    //create edit button with function to edit the task\n    const cardTaskEditBtn = document.createElement(\"button\");\n    cardTaskEditBtn.textContent = \"Edit\";\n    cardTaskEditBtn.classList.add(\"card-task-edit-btn\");\n    // function for editing the task\n    cardTaskEditBtn.addEventListener(\"click\", (event) => {\n      event.stopPropagation();\n      // get task object\n      let taskCard = event.target.closest(\".task-card\");\n      let taskId = taskCard.dataset.id;\n      this.editTaskForm(taskId);\n    });\n\n    newTaskCard.style.height = \"5rem\";\n\n    //add event listener with function to expand a task card\n    newTaskCard.addEventListener(\"click\", function (event) {\n      const clickedTaskCard = event.target.closest(\".task-card\");\n      const hiddenCard = clickedTaskCard.children[1];\n\n      let clickedTaskCardChild = clickedTaskCard.children[0];\n      const priorityText = clickedTaskCardChild.children[2];\n\n      hiddenContent.style.display =\n        hiddenContent.style.display === \"none\" ? \"flex\" : \"none\";\n      newTaskCard.style.height =\n        newTaskCard.style.height === \"5rem\" ? \"auto\" : \"5rem\";\n      visibleContent.classList.toggle(\"card-task-visible-border\");\n\n      switch (priorityText.innerHTML) {\n        case \"High\":\n          clickedTaskCardChild.classList.toggle(\n            \"card-task-background-color-high\"\n          );\n          hiddenCard.classList.toggle(\"hidden-background-color-high\");\n          break;\n\n        case \"Medium\":\n          clickedTaskCardChild.classList.toggle(\n            \"card-task-background-color-medium\"\n          );\n          hiddenCard.classList.toggle(\"hidden-background-color-medium\");\n          break;\n\n        case \"Low\":\n          clickedTaskCardChild.classList.toggle(\n            \"card-task-background-color-low\"\n          );\n          hiddenCard.classList.toggle(\"hidden-background-color-low\");\n          break;\n      }\n    });\n\n    // append all elements\n    cardTaskBtnContainer.append(cardTaskDeleteBtn, cardTaskEditBtn);\n    visibleContent.append(checkBox, cardTaskTitle, cardTaskPriority);\n    hiddenContent.append(\n      dateProjectContainer,\n      cardTaskDescription,\n      cardTaskBtnContainer\n    );\n\n    newTaskCard.append(visibleContent, hiddenContent);\n\n    return newTaskCard;\n  }\n\n  editTaskForm = (taskId) => {\n    const taskObject = NewTaskManager.taskList.find(\n      (task) => task.data.id === taskId\n    );\n\n    if (taskObject) {\n      // blurred screen for background\n      const blurredScreen = document.createElement(\"div\");\n      blurredScreen.classList.add(\"blurred-screen\");\n      //create form div\n      const editForm = document.createElement(\"div\");\n      editForm.className = \"edit-form\";\n      // create title\n      const editTitle = document.createElement(\"h2\");\n      editTitle.textContent = \"Title\";\n      editTitle.className = \"edit-title\";\n      //create title input field with the value of the task to edit\n      const editTitleInput = document.createElement(\"input\");\n      editTitleInput.className = \"edit-title-input\";\n      editTitleInput.value = taskObject.data.title;\n      //create project field\n      const editProject = document.createElement(\"h2\");\n      editProject.textContent = \"Project\";\n      editProject.className = \"edit-project-title\";\n      //create project selection field with the value of the task to edit\n      const editProjectInput = document.createElement(\"select\");\n      editProjectInput.className = \"edit-project-input\";\n      //create the options to select\"\n      const optionElements = Array.from(\n        document.querySelectorAll(\".new-project-nav-btn\")\n      );\n      const innerHTMLArray = optionElements.map(function (element) {\n        return element.textContent;\n      });\n\n      const noProject = \"No Project\";\n\n      innerHTMLArray.push(noProject);\n\n      innerHTMLArray.forEach((optionText) => {\n        const option = document.createElement(\"option\");\n        option.value = optionText;\n        option.textContent = optionText;\n        editProjectInput.appendChild(option);\n      });\n\n      //create date\n      const editDate = document.createElement(\"h2\");\n      editDate.textContent = \"Date\";\n      editDate.className = \"edit-date\";\n      //create date input field with the value of the task to edit\n      const editDateInput = document.createElement(\"input\");\n      editDateInput.className = \"edit-date-input\";\n      editDateInput.type = \"date\";\n      editDateInput.value = taskObject.data.date;\n      //create priority\n      const editPriority = document.createElement(\"h2\");\n      editPriority.textContent = \"Priority\";\n      editPriority.className = \"edit-priority\";\n      //create priority input field with the value of the task to edit\n      const editPriorityInput = document.createElement(\"select\");\n      editPriorityInput.className = \"edit-priority-input\";\n      // create the options to select\n      const options = [\"High\", \"Medium\", \"Low\"];\n      options.forEach((optionText) => {\n        const option = document.createElement(\"option\");\n        option.value = optionText;\n        option.textContent = optionText;\n        editPriorityInput.appendChild(option);\n        editPriorityInput.value = taskObject.data.priority;\n      });\n\n      // create description\n      const editDescription = document.createElement(\"h2\");\n      editDescription.textContent = \"Description\";\n      editDescription.className = \"edit-description\";\n      //create description input field with the value of the task to edit\n      const editDescriptionInput = document.createElement(\"textarea\");\n      editDescriptionInput.className = \"edit-description-input\";\n      editDescriptionInput.value = taskObject.data.description;\n      //create button container\n      const editButtonContainer = document.createElement(\"div\");\n      editButtonContainer.className = \"edit-button-container\";\n      // create button for submitting the changes\n      const editSubmitBtn = document.createElement(\"button\");\n      editSubmitBtn.className = \"edit-submit-button\";\n      editSubmitBtn.textContent = \"Save\";\n\n      //add event listener to the edit submit button\n      editSubmitBtn.addEventListener(\"click\", () => {\n        //change the task values in the taskList\n        let taskIndex = NewTaskManager.taskList.findIndex(\n          (task) => task.data.id === taskId\n        );\n\n        NewTaskManager.taskList[taskIndex].data.title = editTitleInput.value;\n        NewTaskManager.taskList[taskIndex].data.date = editDateInput.value;\n        NewTaskManager.taskList[taskIndex].data.project =\n          editProjectInput.value;\n        NewTaskManager.taskList[taskIndex].data.priority =\n          editPriorityInput.value;\n        NewTaskManager.taskList[taskIndex].data.description =\n          editDescriptionInput.value;\n\n        // create new taskData for the new taskCard after editing\n        const taskData = {\n          title: NewTaskManager.taskList[taskIndex].data.title,\n          date: NewTaskManager.taskList[taskIndex].data.date,\n          project: NewTaskManager.taskList[taskIndex].data.project,\n          priority: NewTaskManager.taskList[taskIndex].data.priority,\n          description: NewTaskManager.taskList[taskIndex].data.description,\n          id: taskId,\n        };\n\n        // create new task Card\n        const updatedTaskCard = this.createTaskCard(taskData);\n        updatedTaskCard.style.height = \"5rem\";\n        NewTaskManager.taskList[taskIndex].element = updatedTaskCard;\n\n        // remove form and blurry screen\n        this.currentContent.removeChild(editForm);\n        this.currentContent.removeChild(blurredScreen);\n\n        // update screen\n        this.saveTasksToLocalStorage();\n        this.updateScreen();\n      });\n\n      //create cancel button\n      let editCancelBtn = document.createElement(\"button\");\n      editCancelBtn.className = \"edit-cancel-button\";\n      editCancelBtn.textContent = \"Cancel\";\n\n      // ad event listener with function to the cancel button\n      editCancelBtn.addEventListener(\"click\", () => {\n        this.currentContent.removeChild(editForm);\n        this.currentContent.removeChild(blurredScreen);\n        this.formActive = false;\n      });\n\n      //append the buttons to the button container\n      editButtonContainer.append(editSubmitBtn, editCancelBtn);\n      //append the elements to the form\n      editForm.append(\n        editTitle,\n        editTitleInput,\n        editProject,\n        editProjectInput,\n        editDate,\n        editDateInput,\n        editPriority,\n        editPriorityInput,\n        editDescription,\n        editDescriptionInput,\n        editButtonContainer\n      );\n      this.currentContent.append(editForm, blurredScreen);\n    }\n  };\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NewTaskManager);\n\n// wenn ich einen task checke dann die siet ehin und wieder zurück wechsle uhnd dann unchecke dann bleibt der font durcvhgeestrichzen\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/newTaskManager.js\n");

/***/ }),

/***/ "./src/projectManager.js":
/*!*******************************!*\
  !*** ./src/projectManager.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _DOM__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DOM */ \"./src/DOM.js\");\n/* harmony import */ var _handleViewOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handleViewOptions */ \"./src/handleViewOptions.js\");\n/* harmony import */ var _newTaskManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./newTaskManager */ \"./src/newTaskManager.js\");\n\n\n\n\nclass ProjectManager {\n  constructor(taskManager) {\n    this.taskManager = taskManager;\n\n    this.taskList = _newTaskManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].taskList;\n    this.newProjectButton = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].newProjectButton;\n    this.projectNav = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].projects;\n    this.initializeEventListeners();\n    this.newProjectForm = false;\n    this.titleInput = null;\n    this.currentContent = _DOM__WEBPACK_IMPORTED_MODULE_0__[\"default\"].currentContent;\n    this.projectData = \"\";\n    this.editProjectFormActive = false;\n    this.projectPages = [];\n    this.loadProjectPages();\n    this.projectButtonCount = this.projectPages.length;\n  }\n  // event listener for the new project button\n  initializeEventListeners() {\n    this.newProjectButton.addEventListener(\n      \"click\",\n      this.addNewProject.bind(this)\n    );\n  }\n\n  //function for the input form to create a new project\n  addNewProject() {\n    if (this.newProjectForm) {\n      alert(\"Please fill out the new project form\");\n    } else {\n      const newForm = document.createElement(\"div\");\n      newForm.className = \"project-form\";\n\n      this.titleInput = document.createElement(\"input\");\n      this.titleInput.className = \"project-title-input\";\n      this.titleInput.placeholder = \"Project Title\";\n\n      const buttonContainer = document.createElement(\"div\");\n      buttonContainer.className = \"project-button-container\";\n\n      const saveButton = document.createElement(\"button\");\n      saveButton.className = \"project-save-button\";\n      saveButton.textContent = \"Save\";\n      saveButton.addEventListener(\"click\", () => {\n        this.saveProjectPages();\n        this.createProjectNavLink();\n        this.createProjectPage();\n      });\n\n      const cancelButton = document.createElement(\"button\");\n      cancelButton.className = \"project-cancel-button\";\n      cancelButton.textContent = \"Cancel\";\n      cancelButton.addEventListener(\"click\", this.cancelNewProject.bind(this));\n\n      buttonContainer.append(saveButton, cancelButton);\n      newForm.append(this.titleInput, buttonContainer);\n      //\n      this.projectNav.appendChild(newForm);\n      this.newProjectForm = true;\n    }\n  }\n\n  // function for adding a button with the project title to the nav bar\n  createProjectNavLink(projectTitle) {\n    let title;\n\n    if (projectTitle) {\n      title = projectTitle;\n\n      this.projectData = {\n        title: projectTitle,\n      };\n    } else if (this.titleInput && this.titleInput.value) {\n      title = this.titleInput.value;\n\n      this.projectData = {\n        title: title,\n      };\n    } else {\n      console.log(\"No project title provided\");\n    }\n\n    //create a div for the elements\n    const newProjectDiv = document.createElement(\"div\");\n    newProjectDiv.className = \"new-project-div\";\n\n    //create new button with the value of the input\n    const newNavLink = document.createElement(\"button\");\n    newNavLink.addEventListener(\"click\", (event) => {\n      //which button got clicked / filter ID\n      const projectButton = event.target.closest(\".new-project-nav-btn\");\n      const projectId = projectButton.id;\n      const projectNum = projectId[projectId.length - 1];\n      //page to link\n      const projectPage = document.querySelector(`#projectPage-${projectNum}`);\n\n      //hide all other project pages\n      const projectPagesToHide = document.querySelectorAll(\".project-page\");\n      projectPagesToHide.forEach((page) => {\n        page.style.display = \"none\";\n      });\n\n      //hide all task pages\n      const taskPages = document.querySelectorAll(\".task-page\");\n      taskPages.forEach((page) => {\n        page.style.display = \"none\";\n      });\n\n      //display the wanted page\n      projectPage.style.display = \"flex\";\n\n      _handleViewOptions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].currentPage = \"project-page\";\n      this.taskManager.updateScreen();\n    });\n\n    newNavLink.className = \"new-project-nav-btn\";\n    this.projectButtonCount++;\n    //set id for customization the project button for later use\n    newNavLink.setAttribute(\"id\", `project-${this.projectButtonCount}`);\n\n    //save data in projectPages for later loading from the storage\n    this.projectData.id = newNavLink.id;\n    this.projectPages.push(this.projectData);\n\n    //add an icon before the title\n    const icon = document.createElement(\"img\");\n    icon.className = \"project-icon\";\n    icon.src = \"../src/media/target.png\";\n\n    newNavLink.appendChild(icon);\n\n    const buttonTitle = document.createTextNode(title);\n    newNavLink.appendChild(buttonTitle);\n\n    //create edit and delete buttons\n    const buttonContainer = document.createElement(\"div\");\n    buttonContainer.className = \"project-buttons\";\n\n    //delete project nav button\n    const deleteProject = document.createElement(\"button\");\n    deleteProject.className = \"delete-project\";\n\n    deleteProject.classList.add(`project-${this.projectButtonCount}`);\n    deleteProject.textContent = \"Delete\";\n\n    //function to delete the project\n    deleteProject.addEventListener(\"click\", (event) => {\n      const projectButtonToDelete = event.target.closest(\".project-container\");\n\n      //find linked page to delete\n      const projectClass = event.target.classList[1];\n      console.log(projectClass);\n      const projectClassNum = projectClass[projectClass.length - 1];\n      const pageToDelete = document.querySelector(\n        `#projectPage-${projectClassNum}`\n      );\n\n      //search for title to delete project from the projectPages\n      let searchedClass = projectClass;\n      let index = this.projectPages.findIndex(\n        (page) => page.id === searchedClass\n      );\n\n      //delete project from the array\n      this.projectPages.splice(index, 1);\n      //update the saved objects\n      this.saveProjectPages();\n\n      this.projectNav.removeChild(projectButtonToDelete);\n      this.currentContent.removeChild(pageToDelete);\n      this.projectButtonCount--;\n    });\n\n    const editProject = document.createElement(\"button\");\n    editProject.className = \"edit-project\";\n    editProject.classList.add(`project-${this.projectButtonCount}`);\n    editProject.textContent = \"Edit\";\n    editProject.addEventListener(\"click\", this.editProjectForm.bind(this));\n\n    buttonContainer.append(editProject, deleteProject);\n\n    //container to style it properly\n    const container = document.createElement(\"div\");\n    container.className = \"project-container\";\n\n    newProjectDiv.append(newNavLink);\n    container.append(newProjectDiv, buttonContainer);\n\n    this.projectNav.appendChild(container);\n\n    //only remove the form when it is active\n    if (this.newProjectForm) {\n      // find the project form to remove it from the DOM\n      const projectForm = document.querySelector(\".project-form\");\n      this.projectNav.removeChild(projectForm);\n\n      // set back the value of the project form so a new one can pop up\n      this.newProjectForm = false;\n    }\n\n    this.saveProjectPages();\n  }\n\n  createProjectPage(projectTitle) {\n    let title;\n\n    if (projectTitle) {\n      title = projectTitle.replace(/\\s+/g, \"-\");\n    } else if (this.titleInput && this.titleInput.value) {\n      title = this.titleInput.value.replace(/\\s+/g, \"-\");\n    } else {\n      console.error(\"No project title provided\");\n      return;\n    }\n\n    const projectPageId = `projectPage-${this.projectButtonCount}`;\n    const existingPage = document.getElementById(projectPageId);\n    if (!existingPage) {\n      const projectPage = document.createElement(\"div\");\n      projectPage.setAttribute(\"id\", projectPageId);\n      projectPage.className = `project-page Project-${title}`;\n      projectPage.style.display = \"none\";\n      this.currentContent.appendChild(projectPage);\n    }\n  }\n\n  // function for canceling the new project form\n  cancelNewProject() {\n    this.titleInput.value = \"\";\n    const projectForm = document.querySelector(\".project-form\");\n    this.projectNav.removeChild(projectForm);\n    this.newProjectForm = false;\n  }\n\n  editProjectForm(event) {\n    if (this.editProjectFormActive === false) {\n      this.editProjectFormActive = true;\n\n      //searching for the right project to edit\n      const editButtonClass = event.target.classList[1];\n      const projectToChange = document.querySelector(`#${editButtonClass}`);\n\n      const editForm = document.createElement(\"div\");\n      editForm.className = \"edit-project-form\";\n\n      const editTitle = document.createElement(\"input\");\n      editTitle.className = \"edit-project-title\";\n      editTitle.placeholder = \"new title here\";\n\n      const parentElement = document.querySelector(\".projects\");\n      const targetElement = parentElement.children[1];\n\n      const btnContainer = document.createElement(\"div\");\n      btnContainer.className = \"edit-project-btn-container\";\n\n      const saveChangesButton = document.createElement(\"button\");\n      saveChangesButton.className = \"save-project-changes-button\";\n      saveChangesButton.textContent = \"Save\";\n\n      saveChangesButton.addEventListener(\"click\", () => {\n        projectToChange.textContent = editTitle.value;\n        parentElement.removeChild(editForm);\n        this.editProjectFormActive = false;\n      });\n\n      const cancelChangesButton = document.createElement(\"button\");\n      cancelChangesButton.className = \"cancel-project-changes-button\";\n      cancelChangesButton.textContent = \"Cancel\";\n\n      cancelChangesButton.addEventListener(\"click\", () => {\n        parentElement.removeChild(editForm);\n        this.editProjectFormActive = false;\n      });\n\n      btnContainer.append(saveChangesButton, cancelChangesButton);\n\n      editForm.append(editTitle, btnContainer);\n\n      parentElement.insertBefore(editForm, targetElement);\n    }\n  }\n\n  saveProjectPages() {\n    const projectButtons = this.projectPages.map((project) => project.title);\n    localStorage.setItem(\"projects\", JSON.stringify(projectButtons));\n  }\n\n  loadProjectPages() {\n    const savedButtons = localStorage.getItem(\"projects\");\n\n    if (savedButtons) {\n      const titles = JSON.parse(savedButtons);\n\n      titles.forEach((title, index) => {\n        this.projectButtonCount = index;\n        this.createProjectNavLink(title);\n        this.createProjectPage(title);\n      });\n    }\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ProjectManager);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/projectManager.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;